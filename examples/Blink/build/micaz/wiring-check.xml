<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="62:BlinkAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2acce6fcc5e8"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2acce6dfd618"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-release-tinyos-2_1_2/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2acce6dfd618"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2acce6e0be30"/></to>
    </wire>
    <wire loc="64:BlinkAppC.nc">
      <from><interface-ref name="Timer0" scoped="" ref="0x2acce6fc6578"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2acce7010a60"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-release-tinyos-2_1_2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2acce7010a60"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2acce701d6a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:BlinkAppC.nc">
      <from><interface-ref name="Timer1" scoped="" ref="0x2acce6fc37d8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2acce71c2020"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-release-tinyos-2_1_2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2acce71c2020"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2acce701d6a0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:BlinkAppC.nc">
      <from><interface-ref name="Timer2" scoped="" ref="0x2acce6fbe900"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2acce71da550"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-release-tinyos-2_1_2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2acce71da550"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2acce701d6a0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:BlinkAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2acce6fcd020"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2acce6fbdd28"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-release-tinyos-2_1_2/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2acce6fbdd28"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2acce6fe15e8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-release-tinyos-2_1_2/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2acce6dfca30"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2acce702b0f0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-release-tinyos-2_1_2/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2acce6fb1490"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2acce6cec0d0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-release-tinyos-2_1_2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2acce6cec0d0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2acce6dbfd88"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-release-tinyos-2_1_2/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2acce6fb1e68"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2acce6dff9b0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-release-tinyos-2_1_2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2acce6dff9b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2acce6e0f298"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-release-tinyos-2_1_2/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2acce6fb0560"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x2acce6dfca30"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-release-tinyos-2_1_2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x2acce6e12970"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x2acce6f807e8"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-release-tinyos-2_1_2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x2acce6e0e060"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2acce6f801b8"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-release-tinyos-2_1_2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x2acce6e0f938"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2acce70012d8"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-release-tinyos-2_1_2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x2acce6e0f938"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2acce6e11728"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-release-tinyos-2_1_2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2acce6e11728"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2acce6e14180"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-release-tinyos-2_1_2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2acce6e11db8"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x2acce6e09690"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-release-tinyos-2_1_2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x2acce6e1b388"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x2acce6e2fe00"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x2acce6e2fe00"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2acce6ead740"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-release-tinyos-2_1_2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2acce6e134f8"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x2acce6e11db8"/></to>
    </wire>
    <wire loc="191:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x2acce6e5c968"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2acce6f40970"/></to>
    </wire>
    <wire loc="165:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x2acce6e464d0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2acce6edd020"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2acce6edd020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2acce7347710"/></to>
    </wire>
    <wire loc="176:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x2acce6e4a4d0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2acce6edfd60"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2acce6edfd60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2acce73b2710"/></to>
    </wire>
    <wire loc="185:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x2acce6e511a0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2acce6ef35b8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2acce6ef35b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2acce7430710"/></to>
    </wire>
    <wire loc="143:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x2acce6e2c1a0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2acce6eaaa50"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2acce6eaaa50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2acce7217710"/></to>
    </wire>
    <wire loc="183:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x2acce6e54e00"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2acce6ef62a8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2acce6ef62a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2acce7410710"/></to>
    </wire>
    <wire loc="146:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x2acce6e2a4d0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2acce6eb5bd0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2acce6eb5bd0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2acce72826a8"/></to>
    </wire>
    <wire loc="157:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x2acce6e3e658"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2acce6ec7740"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2acce6ec7740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2acce72db710"/></to>
    </wire>
    <wire loc="168:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x2acce6e43968"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2acce6eda430"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2acce6eda430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2acce7361710"/></to>
    </wire>
    <wire loc="179:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x2acce6e57968"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2acce6eec120"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2acce6eec120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2acce73cf710"/></to>
    </wire>
    <wire loc="138:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x2acce6e23968"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2acce6eb02a8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2acce6eb02a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2acce72086a8"/></to>
    </wire>
    <wire loc="149:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x2acce6e36968"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2acce6ec2020"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2acce6ec2020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2acce7278710"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x2acce6e3baf0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2acce6ec4bd8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2acce6ec4bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2acce72f4710"/></to>
    </wire>
    <wire loc="171:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x2acce6e40e00"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2acce6ed78c8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2acce6ed78c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2acce7358710"/></to>
    </wire>
    <wire loc="188:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x2acce6e5e658"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2acce6ef0a50"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2acce6ef0a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2acce7426710"/></to>
    </wire>
    <wire loc="194:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x2acce6e58348"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2acce6f46020"/></to>
    </wire>
    <wire loc="174:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x2acce6e4c1a0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2acce6ee1a50"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2acce6ee1a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2acce73b9710"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2acce6ead740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2acce721d710"/></to>
    </wire>
    <wire loc="152:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x2acce6e32020"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2acce6ebf430"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2acce6ebf430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2acce728f710"/></to>
    </wire>
    <wire loc="192:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x2acce6e5a020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2acce6f3cab0"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x2acce6e30348"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2acce6ec9500"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2acce6ec9500"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2acce72e26a8"/></to>
    </wire>
    <wire loc="166:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x2acce6e45658"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2acce6edc120"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2acce6edc120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2acce7344710"/></to>
    </wire>
    <wire loc="177:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x2acce6e49658"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2acce6edee18"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2acce6edee18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2acce73af710"/></to>
    </wire>
    <wire loc="186:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x2acce6e50348"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2acce6ef2740"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2acce6ef2740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2acce742c710"/></to>
    </wire>
    <wire loc="144:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x2acce6e2b348"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2acce6ea9bd8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2acce6ea9bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2acce7233710"/></to>
    </wire>
    <wire loc="147:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x2acce6e29658"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2acce6eb4d60"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2acce6eb4d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2acce727f710"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x2acce6e3d7e0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2acce6ec68c8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2acce6ec68c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2acce72fa710"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x2acce6e42af0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2acce6ed95b8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2acce6ed95b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2acce735e710"/></to>
    </wire>
    <wire loc="180:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x2acce6e56af0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2acce6eeb2a8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2acce6eeb2a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2acce73cc710"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x2acce6e22af0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2acce6eaf430"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2acce6eaf430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2acce7223710"/></to>
    </wire>
    <wire loc="150:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x2acce6e35af0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2acce6ec1120"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2acce6ec1120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2acce7295710"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x2acce6e3ac78"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2acce6ec3d60"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2acce6ec3d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2acce72f1710"/></to>
    </wire>
    <wire loc="189:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x2acce6e5d7e0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2acce6f01bd8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2acce6f01bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2acce7423710"/></to>
    </wire>
    <wire loc="164:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x2acce6e47020"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2acce6ecde40"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2acce6ecde40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2acce734a6a8"/></to>
    </wire>
    <wire loc="175:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x2acce6e4b348"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2acce6ee0bd8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2acce6ee0bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2acce73b6710"/></to>
    </wire>
    <wire loc="184:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x2acce6e52020"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2acce6ef4430"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2acce6ef4430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2acce740d710"/></to>
    </wire>
    <wire loc="195:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x2acce6e674d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2acce6f55180"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x2acce6e2d020"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2acce6eab8c8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2acce6eab8c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2acce721a710"/></to>
    </wire>
    <wire loc="153:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x2acce6e311a0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2acce6ebe5b8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2acce6ebe5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2acce728c710"/></to>
    </wire>
    <wire loc="182:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x2acce6e55c78"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2acce6ef71e8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2acce6ef71e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2acce74136a8"/></to>
    </wire>
    <wire loc="156:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x2acce6e3f4d0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2acce6ec85b8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2acce6ec85b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2acce72df710"/></to>
    </wire>
    <wire loc="167:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x2acce6e447e0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2acce6edb2a8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2acce6edb2a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2acce7340710"/></to>
    </wire>
    <wire loc="178:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x2acce6e487e0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2acce6eed020"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2acce6eed020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2acce73ac710"/></to>
    </wire>
    <wire loc="187:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x2acce6e5f4d0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2acce6ef18c8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2acce6ef18c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2acce7429710"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x2acce6e167e0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2acce6ea01e8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2acce6ea01e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2acce720c520"/></to>
    </wire>
    <wire loc="148:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x2acce6e287e0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2acce6eb2e18"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2acce6eb2e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2acce727b710"/></to>
    </wire>
    <wire loc="159:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x2acce6e3c968"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2acce6ec5a50"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2acce6ec5a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2acce72f7710"/></to>
    </wire>
    <wire loc="170:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x2acce6e41c78"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2acce6ed8740"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2acce6ed8740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2acce735b710"/></to>
    </wire>
    <wire loc="193:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x2acce6e591a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2acce6f4bc38"/></to>
    </wire>
    <wire loc="173:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x2acce6e4e020"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2acce6ee2930"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2acce6ee2930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2acce73bc6a8"/></to>
    </wire>
    <wire loc="162:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x2acce6e39e00"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2acce6ed4e18"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2acce6ed4e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2acce72ee710"/></to>
    </wire>
    <wire loc="140:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x2acce6e21c78"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2acce6eae5b8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2acce6eae5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2acce7220710"/></to>
    </wire>
    <wire loc="151:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x2acce6e34e00"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2acce6ec02a8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2acce6ec02a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2acce7292710"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-release-tinyos-2_1_2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x2acce6cedb18"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2acce6dbec58"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-release-tinyos-2_1_2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x2acce6dc8168"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x2acce6ce4dd8"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x2acce6de27f0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x2acce70cd268"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-release-tinyos-2_1_2/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2acce70012d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2acce6fe1020"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-release-tinyos-2_1_2/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2acce6fe0ce8"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x2acce6fe2e20"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-release-tinyos-2_1_2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2acce6fe2e20"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x2acce6e22af0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-release-tinyos-2_1_2/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2acce6fdfe70"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x2acce7003020"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-release-tinyos-2_1_2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2acce7003020"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x2acce6e23968"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-release-tinyos-2_1_2/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2acce6ff3020"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x2acce70021b0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-release-tinyos-2_1_2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2acce70021b0"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x2acce6e167e0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-release-tinyos-2_1_2/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2acce701d6a0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2acce702bde8"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-release-tinyos-2_1_2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2acce702bde8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2acce71ac5e0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-release-tinyos-2_1_2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2acce702b0f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2acce7037b98"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-release-tinyos-2_1_2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2acce7021338"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2acce71bb128"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-release-tinyos-2_1_2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2acce7037b98"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2acce71281f0"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-release-tinyos-2_1_2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x2acce71a6858"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2acce716bab0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-release-tinyos-2_1_2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2acce7166c70"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x2acce702c748"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-release-tinyos-2_1_2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x2acce702c748"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2acce7128998"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-release-tinyos-2_1_2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2acce71d0330"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x2acce703de40"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-release-tinyos-2_1_2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x2acce703de40"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2acce7140a90"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2acce7140a90"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2acce74f3608"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2acce71281f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2acce74f8c70"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2acce7128998"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2acce74f7478"/></to>
    </wire>
    <wire loc="39:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2acce74f1710"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2acce70b4df8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2acce70b4df8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2acce70d70f8"/></to>
    </wire>
    <wire loc="40:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2acce74eb708"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2acce70c6020"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2acce70c6020"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2acce70d2160"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2acce74ea6c0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2acce70c5020"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2acce70c5020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2acce70d1190"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x2acce751a8c0"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x2acce70c1228"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x2acce70c1228"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x2acce70cd968"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-release-tinyos-2_1_2/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x2acce7162cf0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2acce6cedb18"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/opt/tinyos-release-tinyos-2_1_2/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x2acce71bf930"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2acce6cedb18"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/opt/tinyos-release-tinyos-2_1_2/tos/system/MainC.nc">
      <documentation loc="1:/opt/tinyos-release-tinyos-2_1_2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:/opt/tinyos-release-tinyos-2_1_2/tos/platforms/mica/PlatformC.nc">
      <documentation loc="1:/opt/tinyos-release-tinyos-2_1_2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/opt/tinyos-release-tinyos-2_1_2/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/opt/tinyos-release-tinyos-2_1_2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="38:/opt/tinyos-release-tinyos-2_1_2/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="33:/opt/tinyos-release-tinyos-2_1_2/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="41:/opt/tinyos-release-tinyos-2_1_2/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="35:/opt/tinyos-release-tinyos-2_1_2/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="42:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="36:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:59">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="I:58">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="I:57">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:56">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:53">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="22:/opt/tinyos-release-tinyos-2_1_2/tos/platforms/mica/MeasureClockC.nc" safe="">
      <documentation loc="14:/opt/tinyos-release-tinyos-2_1_2/tos/platforms/mica/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/opt/tinyos-release-tinyos-2_1_2/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/opt/tinyos-release-tinyos-2_1_2/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/opt/tinyos-release-tinyos-2_1_2/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/opt/tinyos-release-tinyos-2_1_2/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/opt/tinyos-release-tinyos-2_1_2/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="48:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/McuSleepC.nc" safe="">
      <documentation loc="34:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.11 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @date   October 26, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BlinkC" loc="50:BlinkC.nc" safe="">
      <documentation loc="43:BlinkC.nc">
        <short>&#10; Implementation for Blink application.</short>
        <long>&#10; Implementation for Blink application.  Toggle the red LED when a&#10; Timer fires.&#10;*</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="45:/opt/tinyos-release-tinyos-2_1_2/tos/system/LedsC.nc">
      <documentation loc="34:/opt/tinyos-release-tinyos-2_1_2/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/opt/tinyos-release-tinyos-2_1_2/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/opt/tinyos-release-tinyos-2_1_2/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="42:/opt/tinyos-release-tinyos-2_1_2/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/opt/tinyos-release-tinyos-2_1_2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BlinkAppC.Timer0" loc="44(BlinkAppC.Timer0):/opt/tinyos-release-tinyos-2_1_2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-release-tinyos-2_1_2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/opt/tinyos-release-tinyos-2_1_2/tos/system/TimerMilliP.nc">
      <documentation loc="34:/opt/tinyos-release-tinyos-2_1_2/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/opt/tinyos-release-tinyos-2_1_2/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="34:/opt/tinyos-release-tinyos-2_1_2/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/opt/tinyos-release-tinyos-2_1_2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="11:/opt/tinyos-release-tinyos-2_1_2/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC):/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="11:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2acce6d87cc0"/>
            <typename><typedef-ref name="TMilli" ref="0x2acce6d86088"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP):/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <documentation loc="11:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2acce703bc58"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer0AsyncC" loc="43:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <documentation loc="33:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0AsyncP" loc="46:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc" safe="">
      <documentation loc="34:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
        <short>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 0 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/opt/tinyos-release-tinyos-2_1_2/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/opt/tinyos-release-tinyos-2_1_2/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2acce6d87cc0"/>
            <typename><typedef-ref name="TMilli" ref="0x2acce6d86088"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/opt/tinyos-release-tinyos-2_1_2/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/opt/tinyos-release-tinyos-2_1_2/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2acce6d87cc0"/>
            <typename><typedef-ref name="TMilli" ref="0x2acce6d86088"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/opt/tinyos-release-tinyos-2_1_2/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/opt/tinyos-release-tinyos-2_1_2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2acce6d87cc0"/>
            <typename><typedef-ref name="TMilli" ref="0x2acce6d86088"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BlinkAppC.Timer1" loc="44(BlinkAppC.Timer1):/opt/tinyos-release-tinyos-2_1_2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-release-tinyos-2_1_2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="BlinkAppC.Timer2" loc="44(BlinkAppC.Timer2):/opt/tinyos-release-tinyos-2_1_2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-release-tinyos-2_1_2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2acce6e63758" loc="40:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2acce6e63aa0" loc="40:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2acce6e63de8" loc="40:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2acce6e74020" loc="41:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2acce6e74388" loc="42:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2acce6e746f0" loc="43:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2acce6e74a20" loc="44:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2acce6f0a020" loc="42:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2acce6f0a388" loc="43:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2acce6f0a6f0" loc="44:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2acce6f0aa20" loc="45:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/opt/tinyos-release-tinyos-2_1_2/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-release-tinyos-2_1_2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="23:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="11:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x2acce703bc58" loc="23:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2acce703bc58"/></type-var>
        </typedef>
        <constant name="divider" ref="0x2acce7038020" loc="23:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncP" loc="23:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="11:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x2acce7045410" loc="23:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2acce7045410"/></type-var>
        </typedef>
        <constant name="divider" ref="0x2acce7045700" loc="23:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/opt/tinyos-release-tinyos-2_1_2/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos-release-tinyos-2_1_2/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2acce7035c68" loc="46:/opt/tinyos-release-tinyos-2_1_2/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2acce7035c68"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/opt/tinyos-release-tinyos-2_1_2/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-release-tinyos-2_1_2/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2acce7160cd8" loc="46:/opt/tinyos-release-tinyos-2_1_2/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2acce7160cd8"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x2acce7179020" loc="46:/opt/tinyos-release-tinyos-2_1_2/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/opt/tinyos-release-tinyos-2_1_2/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos-release-tinyos-2_1_2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2acce71bda00" loc="46:/opt/tinyos-release-tinyos-2_1_2/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2acce71bda00"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x2acce6dfca30" loc="58:/opt/tinyos-release-tinyos-2_1_2/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2acce6dfca30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2acce6dfcd80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2acce6dfd618" loc="57:/opt/tinyos-release-tinyos-2_1_2/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2acce6dfd618"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2acce6dfd968"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2acce6e09690" loc="52:/opt/tinyos-release-tinyos-2_1_2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2acce6e09690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2acce6e099e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2acce6dff9b0" loc="46:/opt/tinyos-release-tinyos-2_1_2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2acce6dff9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2acce6dffd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2acce6e12970" loc="50:/opt/tinyos-release-tinyos-2_1_2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2acce6e12970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2acce6e12cc0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2acce6e12e48"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2acce6e09020"/>
        <function-ref name="actualMicro" scoped="" ref="0x2acce6e091a8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2acce6e09330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x2acce6e0f938" loc="45:/opt/tinyos-release-tinyos-2_1_2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x2acce6e0f938"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2acce6e0fc88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2acce6e0f298" loc="44:/opt/tinyos-release-tinyos-2_1_2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2acce6e0f298"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2acce6e0f5e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x2acce6e0e060" loc="46:/opt/tinyos-release-tinyos-2_1_2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x2acce6e0e060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2acce6e0e3b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2acce6e11db8" loc="41:/opt/tinyos-release-tinyos-2_1_2/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2acce6e11db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2acce6e17170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2acce6e11728" loc="40:/opt/tinyos-release-tinyos-2_1_2/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2acce6e11728"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2acce6e11a78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2acce6e134f8" loc="45:/opt/tinyos-release-tinyos-2_1_2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2acce6e134f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2acce6e13848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x2acce6e1b388" loc="44:/opt/tinyos-release-tinyos-2_1_2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x2acce6e1b388"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6e1b6d8"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6e1b860"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6e1b9e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6e1bb70"/>
        <function-ref name="get" scoped="" ref="0x2acce6e1bcf8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6e1be80"/>
        <function-ref name="set" scoped="" ref="0x2acce6e13030"/>
        <function-ref name="clr" scoped="" ref="0x2acce6e131b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2acce6e14180" loc="43:/opt/tinyos-release-tinyos-2_1_2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2acce6e14180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2acce6e144d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x2acce6e5c968" loc="100:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x2acce6e5c968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6e5b0f0"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6e5b278"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6e5b400"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6e5b588"/>
        <function-ref name="get" scoped="" ref="0x2acce6e5b710"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6e5b898"/>
        <function-ref name="set" scoped="" ref="0x2acce6e5ba20"/>
        <function-ref name="clr" scoped="" ref="0x2acce6e5bba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x2acce6e464d0" loc="74:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x2acce6e464d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6e46820"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6e469a8"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6e46b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6e46cb8"/>
        <function-ref name="get" scoped="" ref="0x2acce6e46e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6e45020"/>
        <function-ref name="set" scoped="" ref="0x2acce6e451a8"/>
        <function-ref name="clr" scoped="" ref="0x2acce6e45330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x2acce6e4a4d0" loc="85:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x2acce6e4a4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6e4a820"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6e4a9a8"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6e4ab30"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6e4acb8"/>
        <function-ref name="get" scoped="" ref="0x2acce6e4ae40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6e49020"/>
        <function-ref name="set" scoped="" ref="0x2acce6e491a8"/>
        <function-ref name="clr" scoped="" ref="0x2acce6e49330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x2acce6e511a0" loc="94:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x2acce6e511a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6e514f0"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6e51678"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6e51800"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6e51988"/>
        <function-ref name="get" scoped="" ref="0x2acce6e51b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6e51c98"/>
        <function-ref name="set" scoped="" ref="0x2acce6e51e20"/>
        <function-ref name="clr" scoped="" ref="0x2acce6e50020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x2acce6e2c1a0" loc="52:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x2acce6e2c1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6e2c4f0"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6e2c678"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6e2c800"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6e2c988"/>
        <function-ref name="get" scoped="" ref="0x2acce6e2cb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6e2cc98"/>
        <function-ref name="set" scoped="" ref="0x2acce6e2ce20"/>
        <function-ref name="clr" scoped="" ref="0x2acce6e2b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x2acce6e54e00" loc="92:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x2acce6e54e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6e531a8"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6e53330"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6e534b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6e53640"/>
        <function-ref name="get" scoped="" ref="0x2acce6e537c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6e53950"/>
        <function-ref name="set" scoped="" ref="0x2acce6e53ad8"/>
        <function-ref name="clr" scoped="" ref="0x2acce6e53c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x2acce6e2a4d0" loc="55:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x2acce6e2a4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6e2a820"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6e2a9a8"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6e2ab30"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6e2acb8"/>
        <function-ref name="get" scoped="" ref="0x2acce6e2ae40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6e29020"/>
        <function-ref name="set" scoped="" ref="0x2acce6e291a8"/>
        <function-ref name="clr" scoped="" ref="0x2acce6e29330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x2acce6e3e658" loc="66:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x2acce6e3e658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6e3e9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6e3eb30"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6e3ecb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6e3ee40"/>
        <function-ref name="get" scoped="" ref="0x2acce6e3d020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6e3d1a8"/>
        <function-ref name="set" scoped="" ref="0x2acce6e3d330"/>
        <function-ref name="clr" scoped="" ref="0x2acce6e3d4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x2acce6e43968" loc="77:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x2acce6e43968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6e43cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6e43e40"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6e42020"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6e421a8"/>
        <function-ref name="get" scoped="" ref="0x2acce6e42330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6e424b8"/>
        <function-ref name="set" scoped="" ref="0x2acce6e42640"/>
        <function-ref name="clr" scoped="" ref="0x2acce6e427c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x2acce6e57968" loc="88:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x2acce6e57968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6e57cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6e57e40"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6e56020"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6e561a8"/>
        <function-ref name="get" scoped="" ref="0x2acce6e56330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6e564b8"/>
        <function-ref name="set" scoped="" ref="0x2acce6e56640"/>
        <function-ref name="clr" scoped="" ref="0x2acce6e567c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x2acce6e23968" loc="47:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x2acce6e23968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6e23cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6e23e40"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6e22020"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6e221a8"/>
        <function-ref name="get" scoped="" ref="0x2acce6e22330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6e224b8"/>
        <function-ref name="set" scoped="" ref="0x2acce6e22640"/>
        <function-ref name="clr" scoped="" ref="0x2acce6e227c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x2acce6e36968" loc="58:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x2acce6e36968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6e36cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6e36e40"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6e35020"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6e351a8"/>
        <function-ref name="get" scoped="" ref="0x2acce6e35330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6e354b8"/>
        <function-ref name="set" scoped="" ref="0x2acce6e35640"/>
        <function-ref name="clr" scoped="" ref="0x2acce6e357c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x2acce6e3baf0" loc="69:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x2acce6e3baf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6e3be40"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6e3a020"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6e3a1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6e3a330"/>
        <function-ref name="get" scoped="" ref="0x2acce6e3a4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6e3a640"/>
        <function-ref name="set" scoped="" ref="0x2acce6e3a7c8"/>
        <function-ref name="clr" scoped="" ref="0x2acce6e3a950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x2acce6e40e00" loc="80:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x2acce6e40e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6e4f1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6e4f330"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6e4f4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6e4f640"/>
        <function-ref name="get" scoped="" ref="0x2acce6e4f7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6e4f950"/>
        <function-ref name="set" scoped="" ref="0x2acce6e4fad8"/>
        <function-ref name="clr" scoped="" ref="0x2acce6e4fc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x2acce6e5e658" loc="97:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x2acce6e5e658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6e5e9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6e5eb30"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6e5ecb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6e5ee40"/>
        <function-ref name="get" scoped="" ref="0x2acce6e5d020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6e5d1a8"/>
        <function-ref name="set" scoped="" ref="0x2acce6e5d330"/>
        <function-ref name="clr" scoped="" ref="0x2acce6e5d4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x2acce6e58348" loc="103:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x2acce6e58348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6e58698"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6e58820"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6e589a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6e58b30"/>
        <function-ref name="get" scoped="" ref="0x2acce6e58cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6e58e40"/>
        <function-ref name="set" scoped="" ref="0x2acce6e67020"/>
        <function-ref name="clr" scoped="" ref="0x2acce6e671a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x2acce6e4c1a0" loc="83:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x2acce6e4c1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6e4c4f0"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6e4c678"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6e4c800"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6e4c988"/>
        <function-ref name="get" scoped="" ref="0x2acce6e4cb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6e4cc98"/>
        <function-ref name="set" scoped="" ref="0x2acce6e4ce20"/>
        <function-ref name="clr" scoped="" ref="0x2acce6e4b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x2acce6e2fe00" loc="50:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x2acce6e2fe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6e2e1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6e2e330"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6e2e4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6e2e640"/>
        <function-ref name="get" scoped="" ref="0x2acce6e2e7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6e2e950"/>
        <function-ref name="set" scoped="" ref="0x2acce6e2ead8"/>
        <function-ref name="clr" scoped="" ref="0x2acce6e2ec60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x2acce6e32020" loc="61:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x2acce6e32020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6e32370"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6e324f8"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6e32680"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6e32808"/>
        <function-ref name="get" scoped="" ref="0x2acce6e32990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6e32b18"/>
        <function-ref name="set" scoped="" ref="0x2acce6e32ca0"/>
        <function-ref name="clr" scoped="" ref="0x2acce6e32e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x2acce6e5a020" loc="101:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x2acce6e5a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6e5a370"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6e5a4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6e5a680"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6e5a808"/>
        <function-ref name="get" scoped="" ref="0x2acce6e5a990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6e5ab18"/>
        <function-ref name="set" scoped="" ref="0x2acce6e5aca0"/>
        <function-ref name="clr" scoped="" ref="0x2acce6e5ae28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x2acce6e30348" loc="64:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x2acce6e30348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6e30698"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6e30820"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6e309a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6e30b30"/>
        <function-ref name="get" scoped="" ref="0x2acce6e30cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6e30e40"/>
        <function-ref name="set" scoped="" ref="0x2acce6e3f020"/>
        <function-ref name="clr" scoped="" ref="0x2acce6e3f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x2acce6e45658" loc="75:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x2acce6e45658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6e459a8"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6e45b30"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6e45cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6e45e40"/>
        <function-ref name="get" scoped="" ref="0x2acce6e44020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6e441a8"/>
        <function-ref name="set" scoped="" ref="0x2acce6e44330"/>
        <function-ref name="clr" scoped="" ref="0x2acce6e444b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x2acce6e49658" loc="86:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x2acce6e49658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6e499a8"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6e49b30"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6e49cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6e49e40"/>
        <function-ref name="get" scoped="" ref="0x2acce6e48020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6e481a8"/>
        <function-ref name="set" scoped="" ref="0x2acce6e48330"/>
        <function-ref name="clr" scoped="" ref="0x2acce6e484b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x2acce6e50348" loc="95:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x2acce6e50348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6e50698"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6e50820"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6e509a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6e50b30"/>
        <function-ref name="get" scoped="" ref="0x2acce6e50cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6e50e40"/>
        <function-ref name="set" scoped="" ref="0x2acce6e5f020"/>
        <function-ref name="clr" scoped="" ref="0x2acce6e5f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x2acce6e2b348" loc="53:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x2acce6e2b348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6e2b698"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6e2b820"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6e2b9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6e2bb30"/>
        <function-ref name="get" scoped="" ref="0x2acce6e2bcb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6e2be40"/>
        <function-ref name="set" scoped="" ref="0x2acce6e2a020"/>
        <function-ref name="clr" scoped="" ref="0x2acce6e2a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x2acce6e29658" loc="56:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x2acce6e29658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6e299a8"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6e29b30"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6e29cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6e29e40"/>
        <function-ref name="get" scoped="" ref="0x2acce6e28020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6e281a8"/>
        <function-ref name="set" scoped="" ref="0x2acce6e28330"/>
        <function-ref name="clr" scoped="" ref="0x2acce6e284b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x2acce6e3d7e0" loc="67:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x2acce6e3d7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6e3db30"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6e3dcb8"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6e3de40"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6e3c020"/>
        <function-ref name="get" scoped="" ref="0x2acce6e3c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6e3c330"/>
        <function-ref name="set" scoped="" ref="0x2acce6e3c4b8"/>
        <function-ref name="clr" scoped="" ref="0x2acce6e3c640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x2acce6e42af0" loc="78:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x2acce6e42af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6e42e40"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6e41020"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6e411a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6e41330"/>
        <function-ref name="get" scoped="" ref="0x2acce6e414b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6e41640"/>
        <function-ref name="set" scoped="" ref="0x2acce6e417c8"/>
        <function-ref name="clr" scoped="" ref="0x2acce6e41950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x2acce6e56af0" loc="89:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x2acce6e56af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6e56e40"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6e55020"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6e551a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6e55330"/>
        <function-ref name="get" scoped="" ref="0x2acce6e554b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6e55640"/>
        <function-ref name="set" scoped="" ref="0x2acce6e557c8"/>
        <function-ref name="clr" scoped="" ref="0x2acce6e55950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x2acce6e22af0" loc="48:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x2acce6e22af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6e22e40"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6e21020"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6e211a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6e21330"/>
        <function-ref name="get" scoped="" ref="0x2acce6e214b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6e21640"/>
        <function-ref name="set" scoped="" ref="0x2acce6e217c8"/>
        <function-ref name="clr" scoped="" ref="0x2acce6e21950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x2acce6e35af0" loc="59:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x2acce6e35af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6e34020"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6e341a8"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6e34330"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6e344b8"/>
        <function-ref name="get" scoped="" ref="0x2acce6e34640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6e347c8"/>
        <function-ref name="set" scoped="" ref="0x2acce6e34950"/>
        <function-ref name="clr" scoped="" ref="0x2acce6e34ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x2acce6e3ac78" loc="70:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x2acce6e3ac78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6e39020"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6e391a8"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6e39330"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6e394b8"/>
        <function-ref name="get" scoped="" ref="0x2acce6e39640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6e397c8"/>
        <function-ref name="set" scoped="" ref="0x2acce6e39950"/>
        <function-ref name="clr" scoped="" ref="0x2acce6e39ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x2acce6e5d7e0" loc="98:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x2acce6e5d7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6e5db30"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6e5dcb8"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6e5de40"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6e5c020"/>
        <function-ref name="get" scoped="" ref="0x2acce6e5c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6e5c330"/>
        <function-ref name="set" scoped="" ref="0x2acce6e5c4b8"/>
        <function-ref name="clr" scoped="" ref="0x2acce6e5c640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x2acce6e47020" loc="73:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x2acce6e47020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6e47570"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6e476f8"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6e47880"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6e47a08"/>
        <function-ref name="get" scoped="" ref="0x2acce6e47b90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6e47d18"/>
        <function-ref name="set" scoped="" ref="0x2acce6e46020"/>
        <function-ref name="clr" scoped="" ref="0x2acce6e461a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x2acce6e4b348" loc="84:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x2acce6e4b348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6e4b698"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6e4b820"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6e4b9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6e4bb30"/>
        <function-ref name="get" scoped="" ref="0x2acce6e4bcb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6e4be40"/>
        <function-ref name="set" scoped="" ref="0x2acce6e4a020"/>
        <function-ref name="clr" scoped="" ref="0x2acce6e4a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x2acce6e52020" loc="93:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x2acce6e52020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6e52370"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6e524f8"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6e52680"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6e52808"/>
        <function-ref name="get" scoped="" ref="0x2acce6e52990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6e52b18"/>
        <function-ref name="set" scoped="" ref="0x2acce6e52ca0"/>
        <function-ref name="clr" scoped="" ref="0x2acce6e52e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x2acce6e674d0" loc="104:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x2acce6e674d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6e67820"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6e679a8"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6e67b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6e67cb8"/>
        <function-ref name="get" scoped="" ref="0x2acce6e67e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6e66020"/>
        <function-ref name="set" scoped="" ref="0x2acce6e661a8"/>
        <function-ref name="clr" scoped="" ref="0x2acce6e66330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x2acce6e2d020" loc="51:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x2acce6e2d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6e2d370"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6e2d4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6e2d680"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6e2d808"/>
        <function-ref name="get" scoped="" ref="0x2acce6e2d990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6e2db18"/>
        <function-ref name="set" scoped="" ref="0x2acce6e2dca0"/>
        <function-ref name="clr" scoped="" ref="0x2acce6e2de28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x2acce6e311a0" loc="62:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x2acce6e311a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6e314f0"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6e31678"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6e31800"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6e31988"/>
        <function-ref name="get" scoped="" ref="0x2acce6e31b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6e31c98"/>
        <function-ref name="set" scoped="" ref="0x2acce6e31e20"/>
        <function-ref name="clr" scoped="" ref="0x2acce6e30020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x2acce6e55c78" loc="91:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x2acce6e55c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6e54020"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6e541a8"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6e54330"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6e544b8"/>
        <function-ref name="get" scoped="" ref="0x2acce6e54640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6e547c8"/>
        <function-ref name="set" scoped="" ref="0x2acce6e54950"/>
        <function-ref name="clr" scoped="" ref="0x2acce6e54ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x2acce6e3f4d0" loc="65:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x2acce6e3f4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6e3f820"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6e3f9a8"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6e3fb30"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6e3fcb8"/>
        <function-ref name="get" scoped="" ref="0x2acce6e3fe40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6e3e020"/>
        <function-ref name="set" scoped="" ref="0x2acce6e3e1a8"/>
        <function-ref name="clr" scoped="" ref="0x2acce6e3e330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x2acce6e447e0" loc="76:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x2acce6e447e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6e44b30"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6e44cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6e44e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6e43020"/>
        <function-ref name="get" scoped="" ref="0x2acce6e431a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6e43330"/>
        <function-ref name="set" scoped="" ref="0x2acce6e434b8"/>
        <function-ref name="clr" scoped="" ref="0x2acce6e43640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x2acce6e487e0" loc="87:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x2acce6e487e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6e48b30"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6e48cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6e48e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6e57020"/>
        <function-ref name="get" scoped="" ref="0x2acce6e571a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6e57330"/>
        <function-ref name="set" scoped="" ref="0x2acce6e574b8"/>
        <function-ref name="clr" scoped="" ref="0x2acce6e57640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x2acce6e5f4d0" loc="96:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x2acce6e5f4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6e5f820"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6e5f9a8"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6e5fb30"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6e5fcb8"/>
        <function-ref name="get" scoped="" ref="0x2acce6e5fe40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6e5e020"/>
        <function-ref name="set" scoped="" ref="0x2acce6e5e1a8"/>
        <function-ref name="clr" scoped="" ref="0x2acce6e5e330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x2acce6e167e0" loc="46:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x2acce6e167e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6e16b30"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6e16cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6e16e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6e23020"/>
        <function-ref name="get" scoped="" ref="0x2acce6e231a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6e23330"/>
        <function-ref name="set" scoped="" ref="0x2acce6e234b8"/>
        <function-ref name="clr" scoped="" ref="0x2acce6e23640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x2acce6e287e0" loc="57:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x2acce6e287e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6e28b30"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6e28cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6e28e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6e36020"/>
        <function-ref name="get" scoped="" ref="0x2acce6e361a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6e36330"/>
        <function-ref name="set" scoped="" ref="0x2acce6e364b8"/>
        <function-ref name="clr" scoped="" ref="0x2acce6e36640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x2acce6e3c968" loc="68:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x2acce6e3c968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6e3ccb8"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6e3ce40"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6e3b020"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6e3b1a8"/>
        <function-ref name="get" scoped="" ref="0x2acce6e3b330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6e3b4b8"/>
        <function-ref name="set" scoped="" ref="0x2acce6e3b640"/>
        <function-ref name="clr" scoped="" ref="0x2acce6e3b7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x2acce6e41c78" loc="79:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x2acce6e41c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6e40020"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6e401a8"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6e40330"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6e404b8"/>
        <function-ref name="get" scoped="" ref="0x2acce6e40640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6e407c8"/>
        <function-ref name="set" scoped="" ref="0x2acce6e40950"/>
        <function-ref name="clr" scoped="" ref="0x2acce6e40ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x2acce6e591a0" loc="102:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x2acce6e591a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6e594f0"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6e59678"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6e59800"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6e59988"/>
        <function-ref name="get" scoped="" ref="0x2acce6e59b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6e59c98"/>
        <function-ref name="set" scoped="" ref="0x2acce6e59e20"/>
        <function-ref name="clr" scoped="" ref="0x2acce6e58020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x2acce6e4e020" loc="82:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x2acce6e4e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6e4e370"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6e4e4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6e4e680"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6e4e808"/>
        <function-ref name="get" scoped="" ref="0x2acce6e4e990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6e4eb18"/>
        <function-ref name="set" scoped="" ref="0x2acce6e4eca0"/>
        <function-ref name="clr" scoped="" ref="0x2acce6e4ee28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x2acce6e39e00" loc="71:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x2acce6e39e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6e381a8"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6e38330"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6e384b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6e38640"/>
        <function-ref name="get" scoped="" ref="0x2acce6e387c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6e38950"/>
        <function-ref name="set" scoped="" ref="0x2acce6e38ad8"/>
        <function-ref name="clr" scoped="" ref="0x2acce6e38c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x2acce6e21c78" loc="49:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x2acce6e21c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6e2f020"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6e2f1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6e2f330"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6e2f4b8"/>
        <function-ref name="get" scoped="" ref="0x2acce6e2f640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6e2f7c8"/>
        <function-ref name="set" scoped="" ref="0x2acce6e2f950"/>
        <function-ref name="clr" scoped="" ref="0x2acce6e2fad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x2acce6e34e00" loc="60:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x2acce6e34e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6e331a8"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6e33330"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6e334b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6e33640"/>
        <function-ref name="get" scoped="" ref="0x2acce6e337c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6e33950"/>
        <function-ref name="set" scoped="" ref="0x2acce6e33ad8"/>
        <function-ref name="clr" scoped="" ref="0x2acce6e33c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2acce6eaf430" loc="46:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2acce6eaf430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6eaf780"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6eaf908"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6eafa90"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6eafc18"/>
        <function-ref name="get" scoped="" ref="0x2acce6eafda0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6eae020"/>
        <function-ref name="set" scoped="" ref="0x2acce6eae1a8"/>
        <function-ref name="clr" scoped="" ref="0x2acce6eae330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2acce6eab8c8" loc="49:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2acce6eab8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6eabc18"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6eabda0"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6eaa020"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6eaa1a8"/>
        <function-ref name="get" scoped="" ref="0x2acce6eaa330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6eaa4b8"/>
        <function-ref name="set" scoped="" ref="0x2acce6eaa640"/>
        <function-ref name="clr" scoped="" ref="0x2acce6eaa7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2acce6ea01e8" loc="44:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2acce6ea01e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6ea0538"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6ea06c0"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6ea0848"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6ea09d0"/>
        <function-ref name="get" scoped="" ref="0x2acce6ea0b58"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6ea0ce0"/>
        <function-ref name="set" scoped="" ref="0x2acce6ea0e68"/>
        <function-ref name="clr" scoped="" ref="0x2acce6eb0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2acce6eae5b8" loc="47:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2acce6eae5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6eae908"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6eaea90"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6eaec18"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6eaeda0"/>
        <function-ref name="get" scoped="" ref="0x2acce6ead020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6ead1a8"/>
        <function-ref name="set" scoped="" ref="0x2acce6ead330"/>
        <function-ref name="clr" scoped="" ref="0x2acce6ead4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2acce6eaaa50" loc="50:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2acce6eaaa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6eaada0"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6ea9020"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6ea91a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6ea9330"/>
        <function-ref name="get" scoped="" ref="0x2acce6ea94b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6ea9640"/>
        <function-ref name="set" scoped="" ref="0x2acce6ea97c8"/>
        <function-ref name="clr" scoped="" ref="0x2acce6ea9950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2acce6eb02a8" loc="45:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2acce6eb02a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6eb05f8"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6eb0780"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6eb0908"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6eb0a90"/>
        <function-ref name="get" scoped="" ref="0x2acce6eb0c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6eb0da0"/>
        <function-ref name="set" scoped="" ref="0x2acce6eaf020"/>
        <function-ref name="clr" scoped="" ref="0x2acce6eaf1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2acce6ead740" loc="48:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2acce6ead740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6eada90"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6eadc18"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6eadda0"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6eab020"/>
        <function-ref name="get" scoped="" ref="0x2acce6eab1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6eab330"/>
        <function-ref name="set" scoped="" ref="0x2acce6eab4b8"/>
        <function-ref name="clr" scoped="" ref="0x2acce6eab640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2acce6ea9bd8" loc="51:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2acce6ea9bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6ea8020"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6ea81a8"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6ea8330"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6ea84b8"/>
        <function-ref name="get" scoped="" ref="0x2acce6ea8640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6ea87c8"/>
        <function-ref name="set" scoped="" ref="0x2acce6ea8950"/>
        <function-ref name="clr" scoped="" ref="0x2acce6ea8ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2acce720c520" loc="46:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2acce720c520"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce720c870"/>
        <function-ref name="isInput" scoped="" ref="0x2acce720c9f8"/>
        <function-ref name="toggle" scoped="" ref="0x2acce720cb80"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce720cd08"/>
        <function-ref name="get" scoped="" ref="0x2acce720a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce720a1a8"/>
        <function-ref name="set" scoped="" ref="0x2acce720a330"/>
        <function-ref name="clr" scoped="" ref="0x2acce720a4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2acce72086a8" loc="46:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2acce72086a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce72089f8"/>
        <function-ref name="isInput" scoped="" ref="0x2acce7208b80"/>
        <function-ref name="toggle" scoped="" ref="0x2acce7208d08"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce7225020"/>
        <function-ref name="get" scoped="" ref="0x2acce72251a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce7225330"/>
        <function-ref name="set" scoped="" ref="0x2acce72254b8"/>
        <function-ref name="clr" scoped="" ref="0x2acce7225640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2acce7223710" loc="46:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2acce7223710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce7223a60"/>
        <function-ref name="isInput" scoped="" ref="0x2acce7223be8"/>
        <function-ref name="toggle" scoped="" ref="0x2acce7223d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce7222020"/>
        <function-ref name="get" scoped="" ref="0x2acce72221a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce7222330"/>
        <function-ref name="set" scoped="" ref="0x2acce72224b8"/>
        <function-ref name="clr" scoped="" ref="0x2acce7222640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2acce7220710" loc="46:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2acce7220710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce7220a60"/>
        <function-ref name="isInput" scoped="" ref="0x2acce7220be8"/>
        <function-ref name="toggle" scoped="" ref="0x2acce7220d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce721f020"/>
        <function-ref name="get" scoped="" ref="0x2acce721f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce721f330"/>
        <function-ref name="set" scoped="" ref="0x2acce721f4b8"/>
        <function-ref name="clr" scoped="" ref="0x2acce721f640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2acce721d710" loc="46:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2acce721d710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce721da60"/>
        <function-ref name="isInput" scoped="" ref="0x2acce721dbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2acce721dd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce721c020"/>
        <function-ref name="get" scoped="" ref="0x2acce721c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce721c330"/>
        <function-ref name="set" scoped="" ref="0x2acce721c4b8"/>
        <function-ref name="clr" scoped="" ref="0x2acce721c640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2acce721a710" loc="46:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2acce721a710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce721aa60"/>
        <function-ref name="isInput" scoped="" ref="0x2acce721abe8"/>
        <function-ref name="toggle" scoped="" ref="0x2acce721ad70"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce7219020"/>
        <function-ref name="get" scoped="" ref="0x2acce72191a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce7219330"/>
        <function-ref name="set" scoped="" ref="0x2acce72194b8"/>
        <function-ref name="clr" scoped="" ref="0x2acce7219640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2acce7217710" loc="46:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2acce7217710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce7217a60"/>
        <function-ref name="isInput" scoped="" ref="0x2acce7217be8"/>
        <function-ref name="toggle" scoped="" ref="0x2acce7217d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce7235020"/>
        <function-ref name="get" scoped="" ref="0x2acce72351a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce7235330"/>
        <function-ref name="set" scoped="" ref="0x2acce72354b8"/>
        <function-ref name="clr" scoped="" ref="0x2acce7235640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2acce7233710" loc="46:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2acce7233710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce7233a60"/>
        <function-ref name="isInput" scoped="" ref="0x2acce7233be8"/>
        <function-ref name="toggle" scoped="" ref="0x2acce7233d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce7232020"/>
        <function-ref name="get" scoped="" ref="0x2acce72321a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce7232330"/>
        <function-ref name="set" scoped="" ref="0x2acce72324b8"/>
        <function-ref name="clr" scoped="" ref="0x2acce7232640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2acce6eb2e18" loc="46:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2acce6eb2e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6eb11a8"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6eb1330"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6eb14b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6eb1640"/>
        <function-ref name="get" scoped="" ref="0x2acce6eb17c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6eb1950"/>
        <function-ref name="set" scoped="" ref="0x2acce6eb1ad8"/>
        <function-ref name="clr" scoped="" ref="0x2acce6eb1c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2acce6ec02a8" loc="49:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2acce6ec02a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6ec05f8"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6ec0780"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6ec0908"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6ec0a90"/>
        <function-ref name="get" scoped="" ref="0x2acce6ec0c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6ec0da0"/>
        <function-ref name="set" scoped="" ref="0x2acce6ebf020"/>
        <function-ref name="clr" scoped="" ref="0x2acce6ebf1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2acce6eb5bd0" loc="44:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2acce6eb5bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6eb4020"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6eb41a8"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6eb4330"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6eb44b8"/>
        <function-ref name="get" scoped="" ref="0x2acce6eb4640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6eb47c8"/>
        <function-ref name="set" scoped="" ref="0x2acce6eb4950"/>
        <function-ref name="clr" scoped="" ref="0x2acce6eb4ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2acce6ec2020" loc="47:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2acce6ec2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6ec2370"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6ec24f8"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6ec2680"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6ec2808"/>
        <function-ref name="get" scoped="" ref="0x2acce6ec2990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6ec2b18"/>
        <function-ref name="set" scoped="" ref="0x2acce6ec2ca0"/>
        <function-ref name="clr" scoped="" ref="0x2acce6ec2e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2acce6ebf430" loc="50:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2acce6ebf430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6ebf780"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6ebf908"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6ebfa90"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6ebfc18"/>
        <function-ref name="get" scoped="" ref="0x2acce6ebfda0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6ebe020"/>
        <function-ref name="set" scoped="" ref="0x2acce6ebe1a8"/>
        <function-ref name="clr" scoped="" ref="0x2acce6ebe330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2acce6eb4d60" loc="45:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2acce6eb4d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6eb20d8"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6eb2260"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6eb23e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6eb2570"/>
        <function-ref name="get" scoped="" ref="0x2acce6eb26f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6eb2880"/>
        <function-ref name="set" scoped="" ref="0x2acce6eb2a08"/>
        <function-ref name="clr" scoped="" ref="0x2acce6eb2b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2acce6ec1120" loc="48:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2acce6ec1120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6ec1470"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6ec15f8"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6ec1780"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6ec1908"/>
        <function-ref name="get" scoped="" ref="0x2acce6ec1a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6ec1c18"/>
        <function-ref name="set" scoped="" ref="0x2acce6ec1da0"/>
        <function-ref name="clr" scoped="" ref="0x2acce6ec0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2acce6ebe5b8" loc="51:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2acce6ebe5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6ebe908"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6ebea90"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6ebec18"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6ebeda0"/>
        <function-ref name="get" scoped="" ref="0x2acce6ebd020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6ebd1a8"/>
        <function-ref name="set" scoped="" ref="0x2acce6ebd330"/>
        <function-ref name="clr" scoped="" ref="0x2acce6ebd4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2acce72826a8" loc="46:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2acce72826a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce72829f8"/>
        <function-ref name="isInput" scoped="" ref="0x2acce7282b80"/>
        <function-ref name="toggle" scoped="" ref="0x2acce7282d08"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce7281020"/>
        <function-ref name="get" scoped="" ref="0x2acce72811a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce7281330"/>
        <function-ref name="set" scoped="" ref="0x2acce72814b8"/>
        <function-ref name="clr" scoped="" ref="0x2acce7281640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2acce727f710" loc="46:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2acce727f710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce727fa60"/>
        <function-ref name="isInput" scoped="" ref="0x2acce727fbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2acce727fd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce727d020"/>
        <function-ref name="get" scoped="" ref="0x2acce727d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce727d330"/>
        <function-ref name="set" scoped="" ref="0x2acce727d4b8"/>
        <function-ref name="clr" scoped="" ref="0x2acce727d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2acce727b710" loc="46:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2acce727b710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce727ba60"/>
        <function-ref name="isInput" scoped="" ref="0x2acce727bbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2acce727bd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce727a020"/>
        <function-ref name="get" scoped="" ref="0x2acce727a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce727a330"/>
        <function-ref name="set" scoped="" ref="0x2acce727a4b8"/>
        <function-ref name="clr" scoped="" ref="0x2acce727a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2acce7278710" loc="46:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2acce7278710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce7278a60"/>
        <function-ref name="isInput" scoped="" ref="0x2acce7278be8"/>
        <function-ref name="toggle" scoped="" ref="0x2acce7278d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce7277020"/>
        <function-ref name="get" scoped="" ref="0x2acce72771a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce7277330"/>
        <function-ref name="set" scoped="" ref="0x2acce72774b8"/>
        <function-ref name="clr" scoped="" ref="0x2acce7277640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2acce7295710" loc="46:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2acce7295710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce7295a60"/>
        <function-ref name="isInput" scoped="" ref="0x2acce7295be8"/>
        <function-ref name="toggle" scoped="" ref="0x2acce7295d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce7294020"/>
        <function-ref name="get" scoped="" ref="0x2acce72941a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce7294330"/>
        <function-ref name="set" scoped="" ref="0x2acce72944b8"/>
        <function-ref name="clr" scoped="" ref="0x2acce7294640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2acce7292710" loc="46:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2acce7292710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce7292a60"/>
        <function-ref name="isInput" scoped="" ref="0x2acce7292be8"/>
        <function-ref name="toggle" scoped="" ref="0x2acce7292d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce7291020"/>
        <function-ref name="get" scoped="" ref="0x2acce72911a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce7291330"/>
        <function-ref name="set" scoped="" ref="0x2acce72914b8"/>
        <function-ref name="clr" scoped="" ref="0x2acce7291640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2acce728f710" loc="46:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2acce728f710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce728fa60"/>
        <function-ref name="isInput" scoped="" ref="0x2acce728fbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2acce728fd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce728e020"/>
        <function-ref name="get" scoped="" ref="0x2acce728e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce728e330"/>
        <function-ref name="set" scoped="" ref="0x2acce728e4b8"/>
        <function-ref name="clr" scoped="" ref="0x2acce728e640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2acce728c710" loc="46:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2acce728c710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce728ca60"/>
        <function-ref name="isInput" scoped="" ref="0x2acce728cbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2acce728cd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce728b020"/>
        <function-ref name="get" scoped="" ref="0x2acce728b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce728b330"/>
        <function-ref name="set" scoped="" ref="0x2acce728b4b8"/>
        <function-ref name="clr" scoped="" ref="0x2acce728b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2acce6ec7740" loc="46:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2acce6ec7740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6ec7a90"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6ec7c18"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6ec7da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6ec6020"/>
        <function-ref name="get" scoped="" ref="0x2acce6ec61a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6ec6330"/>
        <function-ref name="set" scoped="" ref="0x2acce6ec64b8"/>
        <function-ref name="clr" scoped="" ref="0x2acce6ec6640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2acce6ec4bd8" loc="49:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2acce6ec4bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6ec3020"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6ec31a8"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6ec3330"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6ec34b8"/>
        <function-ref name="get" scoped="" ref="0x2acce6ec3640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6ec37c8"/>
        <function-ref name="set" scoped="" ref="0x2acce6ec3950"/>
        <function-ref name="clr" scoped="" ref="0x2acce6ec3ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2acce6ec9500" loc="44:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2acce6ec9500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6ec9850"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6ec99d8"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6ec9b60"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6ec9ce8"/>
        <function-ref name="get" scoped="" ref="0x2acce6ec9e70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6ec8020"/>
        <function-ref name="set" scoped="" ref="0x2acce6ec81a8"/>
        <function-ref name="clr" scoped="" ref="0x2acce6ec8330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2acce6ec68c8" loc="47:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2acce6ec68c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6ec6c18"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6ec6da0"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6ec5020"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6ec51a8"/>
        <function-ref name="get" scoped="" ref="0x2acce6ec5330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6ec54b8"/>
        <function-ref name="set" scoped="" ref="0x2acce6ec5640"/>
        <function-ref name="clr" scoped="" ref="0x2acce6ec57c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2acce6ec3d60" loc="50:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2acce6ec3d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6ed40d8"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6ed4260"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6ed43e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6ed4570"/>
        <function-ref name="get" scoped="" ref="0x2acce6ed46f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6ed4880"/>
        <function-ref name="set" scoped="" ref="0x2acce6ed4a08"/>
        <function-ref name="clr" scoped="" ref="0x2acce6ed4b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2acce6ec85b8" loc="45:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2acce6ec85b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6ec8908"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6ec8a90"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6ec8c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6ec8da0"/>
        <function-ref name="get" scoped="" ref="0x2acce6ec7020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6ec71a8"/>
        <function-ref name="set" scoped="" ref="0x2acce6ec7330"/>
        <function-ref name="clr" scoped="" ref="0x2acce6ec74b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2acce6ec5a50" loc="48:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2acce6ec5a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6ec5da0"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6ec4020"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6ec41a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6ec4330"/>
        <function-ref name="get" scoped="" ref="0x2acce6ec44b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6ec4640"/>
        <function-ref name="set" scoped="" ref="0x2acce6ec47c8"/>
        <function-ref name="clr" scoped="" ref="0x2acce6ec4950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2acce6ed4e18" loc="51:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2acce6ed4e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6ed31a8"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6ed3330"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6ed34b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6ed3640"/>
        <function-ref name="get" scoped="" ref="0x2acce6ed37c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6ed3950"/>
        <function-ref name="set" scoped="" ref="0x2acce6ed3ad8"/>
        <function-ref name="clr" scoped="" ref="0x2acce6ed3c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2acce72e26a8" loc="46:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2acce72e26a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce72e29f8"/>
        <function-ref name="isInput" scoped="" ref="0x2acce72e2b80"/>
        <function-ref name="toggle" scoped="" ref="0x2acce72e2d08"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce72e1020"/>
        <function-ref name="get" scoped="" ref="0x2acce72e11a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce72e1330"/>
        <function-ref name="set" scoped="" ref="0x2acce72e14b8"/>
        <function-ref name="clr" scoped="" ref="0x2acce72e1640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2acce72df710" loc="46:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2acce72df710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce72dfa60"/>
        <function-ref name="isInput" scoped="" ref="0x2acce72dfbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2acce72dfd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce72dd020"/>
        <function-ref name="get" scoped="" ref="0x2acce72dd1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce72dd330"/>
        <function-ref name="set" scoped="" ref="0x2acce72dd4b8"/>
        <function-ref name="clr" scoped="" ref="0x2acce72dd640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2acce72db710" loc="46:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2acce72db710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce72dba60"/>
        <function-ref name="isInput" scoped="" ref="0x2acce72dbbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2acce72dbd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce72da020"/>
        <function-ref name="get" scoped="" ref="0x2acce72da1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce72da330"/>
        <function-ref name="set" scoped="" ref="0x2acce72da4b8"/>
        <function-ref name="clr" scoped="" ref="0x2acce72da640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2acce72fa710" loc="46:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2acce72fa710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce72faa60"/>
        <function-ref name="isInput" scoped="" ref="0x2acce72fabe8"/>
        <function-ref name="toggle" scoped="" ref="0x2acce72fad70"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce72f9020"/>
        <function-ref name="get" scoped="" ref="0x2acce72f91a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce72f9330"/>
        <function-ref name="set" scoped="" ref="0x2acce72f94b8"/>
        <function-ref name="clr" scoped="" ref="0x2acce72f9640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2acce72f7710" loc="46:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2acce72f7710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce72f7a60"/>
        <function-ref name="isInput" scoped="" ref="0x2acce72f7be8"/>
        <function-ref name="toggle" scoped="" ref="0x2acce72f7d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce72f6020"/>
        <function-ref name="get" scoped="" ref="0x2acce72f61a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce72f6330"/>
        <function-ref name="set" scoped="" ref="0x2acce72f64b8"/>
        <function-ref name="clr" scoped="" ref="0x2acce72f6640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2acce72f4710" loc="46:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2acce72f4710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce72f4a60"/>
        <function-ref name="isInput" scoped="" ref="0x2acce72f4be8"/>
        <function-ref name="toggle" scoped="" ref="0x2acce72f4d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce72f3020"/>
        <function-ref name="get" scoped="" ref="0x2acce72f31a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce72f3330"/>
        <function-ref name="set" scoped="" ref="0x2acce72f34b8"/>
        <function-ref name="clr" scoped="" ref="0x2acce72f3640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2acce72f1710" loc="46:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2acce72f1710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce72f1a60"/>
        <function-ref name="isInput" scoped="" ref="0x2acce72f1be8"/>
        <function-ref name="toggle" scoped="" ref="0x2acce72f1d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce72f0020"/>
        <function-ref name="get" scoped="" ref="0x2acce72f01a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce72f0330"/>
        <function-ref name="set" scoped="" ref="0x2acce72f04b8"/>
        <function-ref name="clr" scoped="" ref="0x2acce72f0640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2acce72ee710" loc="46:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2acce72ee710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce72eea60"/>
        <function-ref name="isInput" scoped="" ref="0x2acce72eebe8"/>
        <function-ref name="toggle" scoped="" ref="0x2acce72eed70"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce72ed020"/>
        <function-ref name="get" scoped="" ref="0x2acce72ed1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce72ed330"/>
        <function-ref name="set" scoped="" ref="0x2acce72ed4b8"/>
        <function-ref name="clr" scoped="" ref="0x2acce72ed640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2acce6edc120" loc="46:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2acce6edc120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6edc470"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6edc5f8"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6edc780"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6edc908"/>
        <function-ref name="get" scoped="" ref="0x2acce6edca90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6edcc18"/>
        <function-ref name="set" scoped="" ref="0x2acce6edcda0"/>
        <function-ref name="clr" scoped="" ref="0x2acce6edb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2acce6ed95b8" loc="49:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2acce6ed95b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6ed9908"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6ed9a90"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6ed9c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6ed9da0"/>
        <function-ref name="get" scoped="" ref="0x2acce6ed8020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6ed81a8"/>
        <function-ref name="set" scoped="" ref="0x2acce6ed8330"/>
        <function-ref name="clr" scoped="" ref="0x2acce6ed84b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2acce6ecde40" loc="44:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2acce6ecde40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6ecc1c0"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6ecc348"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6ecc4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6ecc658"/>
        <function-ref name="get" scoped="" ref="0x2acce6ecc7e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6ecc968"/>
        <function-ref name="set" scoped="" ref="0x2acce6eccaf0"/>
        <function-ref name="clr" scoped="" ref="0x2acce6eccc78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2acce6edb2a8" loc="47:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2acce6edb2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6edb5f8"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6edb780"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6edb908"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6edba90"/>
        <function-ref name="get" scoped="" ref="0x2acce6edbc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6edbda0"/>
        <function-ref name="set" scoped="" ref="0x2acce6eda020"/>
        <function-ref name="clr" scoped="" ref="0x2acce6eda1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2acce6ed8740" loc="50:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2acce6ed8740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6ed8a90"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6ed8c18"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6ed8da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6ed7020"/>
        <function-ref name="get" scoped="" ref="0x2acce6ed71a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6ed7330"/>
        <function-ref name="set" scoped="" ref="0x2acce6ed74b8"/>
        <function-ref name="clr" scoped="" ref="0x2acce6ed7640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2acce6edd020" loc="45:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2acce6edd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6edd370"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6edd4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6edd680"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6edd808"/>
        <function-ref name="get" scoped="" ref="0x2acce6edd990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6eddb18"/>
        <function-ref name="set" scoped="" ref="0x2acce6eddca0"/>
        <function-ref name="clr" scoped="" ref="0x2acce6edde28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2acce6eda430" loc="48:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2acce6eda430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6eda780"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6eda908"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6edaa90"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6edac18"/>
        <function-ref name="get" scoped="" ref="0x2acce6edada0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6ed9020"/>
        <function-ref name="set" scoped="" ref="0x2acce6ed91a8"/>
        <function-ref name="clr" scoped="" ref="0x2acce6ed9330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2acce6ed78c8" loc="51:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2acce6ed78c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6ed7c18"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6ed7da0"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6ed5020"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6ed51a8"/>
        <function-ref name="get" scoped="" ref="0x2acce6ed5330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6ed54b8"/>
        <function-ref name="set" scoped="" ref="0x2acce6ed5640"/>
        <function-ref name="clr" scoped="" ref="0x2acce6ed57c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2acce734a6a8" loc="46:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2acce734a6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce734a9f8"/>
        <function-ref name="isInput" scoped="" ref="0x2acce734ab80"/>
        <function-ref name="toggle" scoped="" ref="0x2acce734ad08"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce7349020"/>
        <function-ref name="get" scoped="" ref="0x2acce73491a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce7349330"/>
        <function-ref name="set" scoped="" ref="0x2acce73494b8"/>
        <function-ref name="clr" scoped="" ref="0x2acce7349640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2acce7347710" loc="46:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2acce7347710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce7347a60"/>
        <function-ref name="isInput" scoped="" ref="0x2acce7347be8"/>
        <function-ref name="toggle" scoped="" ref="0x2acce7347d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce7346020"/>
        <function-ref name="get" scoped="" ref="0x2acce73461a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce7346330"/>
        <function-ref name="set" scoped="" ref="0x2acce73464b8"/>
        <function-ref name="clr" scoped="" ref="0x2acce7346640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2acce7344710" loc="46:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2acce7344710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce7344a60"/>
        <function-ref name="isInput" scoped="" ref="0x2acce7344be8"/>
        <function-ref name="toggle" scoped="" ref="0x2acce7344d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce7342020"/>
        <function-ref name="get" scoped="" ref="0x2acce73421a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce7342330"/>
        <function-ref name="set" scoped="" ref="0x2acce73424b8"/>
        <function-ref name="clr" scoped="" ref="0x2acce7342640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2acce7340710" loc="46:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2acce7340710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce7340a60"/>
        <function-ref name="isInput" scoped="" ref="0x2acce7340be8"/>
        <function-ref name="toggle" scoped="" ref="0x2acce7340d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce7363020"/>
        <function-ref name="get" scoped="" ref="0x2acce73631a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce7363330"/>
        <function-ref name="set" scoped="" ref="0x2acce73634b8"/>
        <function-ref name="clr" scoped="" ref="0x2acce7363640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2acce7361710" loc="46:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2acce7361710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce7361a60"/>
        <function-ref name="isInput" scoped="" ref="0x2acce7361be8"/>
        <function-ref name="toggle" scoped="" ref="0x2acce7361d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce7360020"/>
        <function-ref name="get" scoped="" ref="0x2acce73601a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce7360330"/>
        <function-ref name="set" scoped="" ref="0x2acce73604b8"/>
        <function-ref name="clr" scoped="" ref="0x2acce7360640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2acce735e710" loc="46:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2acce735e710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce735ea60"/>
        <function-ref name="isInput" scoped="" ref="0x2acce735ebe8"/>
        <function-ref name="toggle" scoped="" ref="0x2acce735ed70"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce735d020"/>
        <function-ref name="get" scoped="" ref="0x2acce735d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce735d330"/>
        <function-ref name="set" scoped="" ref="0x2acce735d4b8"/>
        <function-ref name="clr" scoped="" ref="0x2acce735d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2acce735b710" loc="46:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2acce735b710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce735ba60"/>
        <function-ref name="isInput" scoped="" ref="0x2acce735bbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2acce735bd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce735a020"/>
        <function-ref name="get" scoped="" ref="0x2acce735a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce735a330"/>
        <function-ref name="set" scoped="" ref="0x2acce735a4b8"/>
        <function-ref name="clr" scoped="" ref="0x2acce735a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2acce7358710" loc="46:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2acce7358710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce7358a60"/>
        <function-ref name="isInput" scoped="" ref="0x2acce7358be8"/>
        <function-ref name="toggle" scoped="" ref="0x2acce7358d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce7357020"/>
        <function-ref name="get" scoped="" ref="0x2acce73571a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce7357330"/>
        <function-ref name="set" scoped="" ref="0x2acce73574b8"/>
        <function-ref name="clr" scoped="" ref="0x2acce7357640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2acce6ee0bd8" loc="46:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2acce6ee0bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6edf020"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6edf1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6edf330"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6edf4b8"/>
        <function-ref name="get" scoped="" ref="0x2acce6edf640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6edf7c8"/>
        <function-ref name="set" scoped="" ref="0x2acce6edf950"/>
        <function-ref name="clr" scoped="" ref="0x2acce6edfad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2acce6eed020" loc="49:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2acce6eed020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6eed370"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6eed4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6eed680"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6eed808"/>
        <function-ref name="get" scoped="" ref="0x2acce6eed990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6eedb18"/>
        <function-ref name="set" scoped="" ref="0x2acce6eedca0"/>
        <function-ref name="clr" scoped="" ref="0x2acce6eede28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2acce6ee2930" loc="44:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2acce6ee2930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6ee2c80"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6ee2e08"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6ee1020"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6ee11a8"/>
        <function-ref name="get" scoped="" ref="0x2acce6ee1330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6ee14b8"/>
        <function-ref name="set" scoped="" ref="0x2acce6ee1640"/>
        <function-ref name="clr" scoped="" ref="0x2acce6ee17c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2acce6edfd60" loc="47:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2acce6edfd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6ede0d8"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6ede260"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6ede3e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6ede570"/>
        <function-ref name="get" scoped="" ref="0x2acce6ede6f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6ede880"/>
        <function-ref name="set" scoped="" ref="0x2acce6edea08"/>
        <function-ref name="clr" scoped="" ref="0x2acce6edeb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2acce6eec120" loc="50:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2acce6eec120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6eec470"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6eec5f8"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6eec780"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6eec908"/>
        <function-ref name="get" scoped="" ref="0x2acce6eeca90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6eecc18"/>
        <function-ref name="set" scoped="" ref="0x2acce6eecda0"/>
        <function-ref name="clr" scoped="" ref="0x2acce6eeb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2acce6ee1a50" loc="45:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2acce6ee1a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6ee1da0"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6ee0020"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6ee01a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6ee0330"/>
        <function-ref name="get" scoped="" ref="0x2acce6ee04b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6ee0640"/>
        <function-ref name="set" scoped="" ref="0x2acce6ee07c8"/>
        <function-ref name="clr" scoped="" ref="0x2acce6ee0950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2acce6edee18" loc="48:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2acce6edee18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6eee1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6eee330"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6eee4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6eee640"/>
        <function-ref name="get" scoped="" ref="0x2acce6eee7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6eee950"/>
        <function-ref name="set" scoped="" ref="0x2acce6eeead8"/>
        <function-ref name="clr" scoped="" ref="0x2acce6eeec60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2acce6eeb2a8" loc="51:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2acce6eeb2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6eeb5f8"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6eeb780"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6eeb908"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6eeba90"/>
        <function-ref name="get" scoped="" ref="0x2acce6eebc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6eebda0"/>
        <function-ref name="set" scoped="" ref="0x2acce6eea020"/>
        <function-ref name="clr" scoped="" ref="0x2acce6eea1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2acce73bc6a8" loc="46:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2acce73bc6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce73bc9f8"/>
        <function-ref name="isInput" scoped="" ref="0x2acce73bcb80"/>
        <function-ref name="toggle" scoped="" ref="0x2acce73bcd08"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce73bb020"/>
        <function-ref name="get" scoped="" ref="0x2acce73bb1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce73bb330"/>
        <function-ref name="set" scoped="" ref="0x2acce73bb4b8"/>
        <function-ref name="clr" scoped="" ref="0x2acce73bb640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2acce73b9710" loc="46:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2acce73b9710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce73b9a60"/>
        <function-ref name="isInput" scoped="" ref="0x2acce73b9be8"/>
        <function-ref name="toggle" scoped="" ref="0x2acce73b9d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce73b8020"/>
        <function-ref name="get" scoped="" ref="0x2acce73b81a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce73b8330"/>
        <function-ref name="set" scoped="" ref="0x2acce73b84b8"/>
        <function-ref name="clr" scoped="" ref="0x2acce73b8640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2acce73b6710" loc="46:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2acce73b6710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce73b6a60"/>
        <function-ref name="isInput" scoped="" ref="0x2acce73b6be8"/>
        <function-ref name="toggle" scoped="" ref="0x2acce73b6d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce73b4020"/>
        <function-ref name="get" scoped="" ref="0x2acce73b41a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce73b4330"/>
        <function-ref name="set" scoped="" ref="0x2acce73b44b8"/>
        <function-ref name="clr" scoped="" ref="0x2acce73b4640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2acce73b2710" loc="46:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2acce73b2710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce73b2a60"/>
        <function-ref name="isInput" scoped="" ref="0x2acce73b2be8"/>
        <function-ref name="toggle" scoped="" ref="0x2acce73b2d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce73b1020"/>
        <function-ref name="get" scoped="" ref="0x2acce73b11a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce73b1330"/>
        <function-ref name="set" scoped="" ref="0x2acce73b14b8"/>
        <function-ref name="clr" scoped="" ref="0x2acce73b1640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2acce73af710" loc="46:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2acce73af710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce73afa60"/>
        <function-ref name="isInput" scoped="" ref="0x2acce73afbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2acce73afd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce73ae020"/>
        <function-ref name="get" scoped="" ref="0x2acce73ae1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce73ae330"/>
        <function-ref name="set" scoped="" ref="0x2acce73ae4b8"/>
        <function-ref name="clr" scoped="" ref="0x2acce73ae640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2acce73ac710" loc="46:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2acce73ac710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce73aca60"/>
        <function-ref name="isInput" scoped="" ref="0x2acce73acbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2acce73acd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce73d1020"/>
        <function-ref name="get" scoped="" ref="0x2acce73d11a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce73d1330"/>
        <function-ref name="set" scoped="" ref="0x2acce73d14b8"/>
        <function-ref name="clr" scoped="" ref="0x2acce73d1640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2acce73cf710" loc="46:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2acce73cf710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce73cfa60"/>
        <function-ref name="isInput" scoped="" ref="0x2acce73cfbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2acce73cfd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce73ce020"/>
        <function-ref name="get" scoped="" ref="0x2acce73ce1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce73ce330"/>
        <function-ref name="set" scoped="" ref="0x2acce73ce4b8"/>
        <function-ref name="clr" scoped="" ref="0x2acce73ce640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2acce73cc710" loc="46:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2acce73cc710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce73cca60"/>
        <function-ref name="isInput" scoped="" ref="0x2acce73ccbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2acce73ccd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce73cb020"/>
        <function-ref name="get" scoped="" ref="0x2acce73cb1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce73cb330"/>
        <function-ref name="set" scoped="" ref="0x2acce73cb4b8"/>
        <function-ref name="clr" scoped="" ref="0x2acce73cb640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2acce6ef4430" loc="46:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2acce6ef4430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6ef4780"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6ef4908"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6ef4a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6ef4c18"/>
        <function-ref name="get" scoped="" ref="0x2acce6ef4da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6ef3020"/>
        <function-ref name="set" scoped="" ref="0x2acce6ef31a8"/>
        <function-ref name="clr" scoped="" ref="0x2acce6ef3330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2acce6ef18c8" loc="49:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2acce6ef18c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6ef1c18"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6ef1da0"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6ef0020"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6ef01a8"/>
        <function-ref name="get" scoped="" ref="0x2acce6ef0330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6ef04b8"/>
        <function-ref name="set" scoped="" ref="0x2acce6ef0640"/>
        <function-ref name="clr" scoped="" ref="0x2acce6ef07c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2acce6ef71e8" loc="44:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2acce6ef71e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6ef7538"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6ef76c0"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6ef7848"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6ef79d0"/>
        <function-ref name="get" scoped="" ref="0x2acce6ef7b58"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6ef7ce0"/>
        <function-ref name="set" scoped="" ref="0x2acce6ef7e68"/>
        <function-ref name="clr" scoped="" ref="0x2acce6ef6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2acce6ef35b8" loc="47:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2acce6ef35b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6ef3908"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6ef3a90"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6ef3c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6ef3da0"/>
        <function-ref name="get" scoped="" ref="0x2acce6ef2020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6ef21a8"/>
        <function-ref name="set" scoped="" ref="0x2acce6ef2330"/>
        <function-ref name="clr" scoped="" ref="0x2acce6ef24b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2acce6ef0a50" loc="50:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2acce6ef0a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6ef0da0"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6f01020"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6f011a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6f01330"/>
        <function-ref name="get" scoped="" ref="0x2acce6f014b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6f01640"/>
        <function-ref name="set" scoped="" ref="0x2acce6f017c8"/>
        <function-ref name="clr" scoped="" ref="0x2acce6f01950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2acce6ef62a8" loc="45:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2acce6ef62a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6ef65f8"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6ef6780"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6ef6908"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6ef6a90"/>
        <function-ref name="get" scoped="" ref="0x2acce6ef6c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6ef6da0"/>
        <function-ref name="set" scoped="" ref="0x2acce6ef4020"/>
        <function-ref name="clr" scoped="" ref="0x2acce6ef41a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2acce6ef2740" loc="48:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2acce6ef2740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6ef2a90"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6ef2c18"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6ef2da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6ef1020"/>
        <function-ref name="get" scoped="" ref="0x2acce6ef11a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6ef1330"/>
        <function-ref name="set" scoped="" ref="0x2acce6ef14b8"/>
        <function-ref name="clr" scoped="" ref="0x2acce6ef1640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2acce6f01bd8" loc="51:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2acce6f01bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6f00020"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6f001a8"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6f00330"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6f004b8"/>
        <function-ref name="get" scoped="" ref="0x2acce6f00640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6f007c8"/>
        <function-ref name="set" scoped="" ref="0x2acce6f00950"/>
        <function-ref name="clr" scoped="" ref="0x2acce6f00ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2acce74136a8" loc="46:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2acce74136a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce74139f8"/>
        <function-ref name="isInput" scoped="" ref="0x2acce7413b80"/>
        <function-ref name="toggle" scoped="" ref="0x2acce7413d08"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce7412020"/>
        <function-ref name="get" scoped="" ref="0x2acce74121a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce7412330"/>
        <function-ref name="set" scoped="" ref="0x2acce74124b8"/>
        <function-ref name="clr" scoped="" ref="0x2acce7412640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2acce7410710" loc="46:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2acce7410710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce7410a60"/>
        <function-ref name="isInput" scoped="" ref="0x2acce7410be8"/>
        <function-ref name="toggle" scoped="" ref="0x2acce7410d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce740f020"/>
        <function-ref name="get" scoped="" ref="0x2acce740f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce740f330"/>
        <function-ref name="set" scoped="" ref="0x2acce740f4b8"/>
        <function-ref name="clr" scoped="" ref="0x2acce740f640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2acce740d710" loc="46:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2acce740d710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce740da60"/>
        <function-ref name="isInput" scoped="" ref="0x2acce740dbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2acce740dd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce740c020"/>
        <function-ref name="get" scoped="" ref="0x2acce740c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce740c330"/>
        <function-ref name="set" scoped="" ref="0x2acce740c4b8"/>
        <function-ref name="clr" scoped="" ref="0x2acce740c640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2acce7430710" loc="46:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2acce7430710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce7430a60"/>
        <function-ref name="isInput" scoped="" ref="0x2acce7430be8"/>
        <function-ref name="toggle" scoped="" ref="0x2acce7430d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce742e020"/>
        <function-ref name="get" scoped="" ref="0x2acce742e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce742e330"/>
        <function-ref name="set" scoped="" ref="0x2acce742e4b8"/>
        <function-ref name="clr" scoped="" ref="0x2acce742e640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2acce742c710" loc="46:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2acce742c710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce742ca60"/>
        <function-ref name="isInput" scoped="" ref="0x2acce742cbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2acce742cd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce742b020"/>
        <function-ref name="get" scoped="" ref="0x2acce742b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce742b330"/>
        <function-ref name="set" scoped="" ref="0x2acce742b4b8"/>
        <function-ref name="clr" scoped="" ref="0x2acce742b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2acce7429710" loc="46:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2acce7429710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce7429a60"/>
        <function-ref name="isInput" scoped="" ref="0x2acce7429be8"/>
        <function-ref name="toggle" scoped="" ref="0x2acce7429d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce7428020"/>
        <function-ref name="get" scoped="" ref="0x2acce74281a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce7428330"/>
        <function-ref name="set" scoped="" ref="0x2acce74284b8"/>
        <function-ref name="clr" scoped="" ref="0x2acce7428640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2acce7426710" loc="46:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2acce7426710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce7426a60"/>
        <function-ref name="isInput" scoped="" ref="0x2acce7426be8"/>
        <function-ref name="toggle" scoped="" ref="0x2acce7426d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce7425020"/>
        <function-ref name="get" scoped="" ref="0x2acce74251a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce7425330"/>
        <function-ref name="set" scoped="" ref="0x2acce74254b8"/>
        <function-ref name="clr" scoped="" ref="0x2acce7425640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2acce7423710" loc="46:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2acce7423710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce7423a60"/>
        <function-ref name="isInput" scoped="" ref="0x2acce7423be8"/>
        <function-ref name="toggle" scoped="" ref="0x2acce7423d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce7422020"/>
        <function-ref name="get" scoped="" ref="0x2acce74221a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce7422330"/>
        <function-ref name="set" scoped="" ref="0x2acce74224b8"/>
        <function-ref name="clr" scoped="" ref="0x2acce7422640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2acce6ef9ac0" loc="47:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2acce6ef9ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6ef9e10"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6f1a020"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6f1a1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6f1a330"/>
        <function-ref name="get" scoped="" ref="0x2acce6f1a4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6f1a640"/>
        <function-ref name="set" scoped="" ref="0x2acce6f1a7c8"/>
        <function-ref name="clr" scoped="" ref="0x2acce6f1a950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2acce6f16db8" loc="47:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2acce6f16db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6f15170"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6f152f8"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6f15480"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6f15608"/>
        <function-ref name="get" scoped="" ref="0x2acce6f15790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6f15918"/>
        <function-ref name="set" scoped="" ref="0x2acce6f15aa0"/>
        <function-ref name="clr" scoped="" ref="0x2acce6f15c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2acce6f223e0" loc="47:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2acce6f223e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6f22730"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6f228b8"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6f22a40"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6f22bc8"/>
        <function-ref name="get" scoped="" ref="0x2acce6f22d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6f21020"/>
        <function-ref name="set" scoped="" ref="0x2acce6f211a8"/>
        <function-ref name="clr" scoped="" ref="0x2acce6f21330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2acce6f1e7e8" loc="47:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2acce6f1e7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6f1eb38"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6f1ecc0"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6f1ee48"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6f1d020"/>
        <function-ref name="get" scoped="" ref="0x2acce6f1d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6f1d330"/>
        <function-ref name="set" scoped="" ref="0x2acce6f1d4b8"/>
        <function-ref name="clr" scoped="" ref="0x2acce6f1d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2acce6f2cc38" loc="47:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2acce6f2cc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6f2b020"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6f2b1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6f2b330"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6f2b4b8"/>
        <function-ref name="get" scoped="" ref="0x2acce6f2b640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6f2b7c8"/>
        <function-ref name="set" scoped="" ref="0x2acce6f2b950"/>
        <function-ref name="clr" scoped="" ref="0x2acce6f2bad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2acce6f26020" loc="47:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2acce6f26020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6f26370"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6f264f8"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6f26680"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6f26808"/>
        <function-ref name="get" scoped="" ref="0x2acce6f26990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6f26b18"/>
        <function-ref name="set" scoped="" ref="0x2acce6f26ca0"/>
        <function-ref name="clr" scoped="" ref="0x2acce6f26e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2acce6f36480" loc="47:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2acce6f36480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6f367d0"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6f36958"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6f36ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6f36c68"/>
        <function-ref name="get" scoped="" ref="0x2acce6f36df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6f35020"/>
        <function-ref name="set" scoped="" ref="0x2acce6f351a8"/>
        <function-ref name="clr" scoped="" ref="0x2acce6f35330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2acce6f317e8" loc="47:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2acce6f317e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6f31b38"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6f31cc0"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6f31e48"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6f30020"/>
        <function-ref name="get" scoped="" ref="0x2acce6f301a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6f30330"/>
        <function-ref name="set" scoped="" ref="0x2acce6f304b8"/>
        <function-ref name="clr" scoped="" ref="0x2acce6f30640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2acce6f40970" loc="47:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2acce6f40970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6f40cc0"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6f40e48"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6f3f020"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6f3f1a8"/>
        <function-ref name="get" scoped="" ref="0x2acce6f3f330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6f3f4b8"/>
        <function-ref name="set" scoped="" ref="0x2acce6f3f640"/>
        <function-ref name="clr" scoped="" ref="0x2acce6f3f7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2acce6f3cab0" loc="47:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2acce6f3cab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6f3ce00"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6f3b020"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6f3b1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6f3b330"/>
        <function-ref name="get" scoped="" ref="0x2acce6f3b4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6f3b640"/>
        <function-ref name="set" scoped="" ref="0x2acce6f3b7c8"/>
        <function-ref name="clr" scoped="" ref="0x2acce6f3b950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2acce6f4bc38" loc="47:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2acce6f4bc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6f4a020"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6f4a1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6f4a330"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6f4a4b8"/>
        <function-ref name="get" scoped="" ref="0x2acce6f4a640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6f4a7c8"/>
        <function-ref name="set" scoped="" ref="0x2acce6f4a950"/>
        <function-ref name="clr" scoped="" ref="0x2acce6f4aad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2acce6f46020" loc="47:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2acce6f46020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6f46370"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6f464f8"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6f46680"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6f46808"/>
        <function-ref name="get" scoped="" ref="0x2acce6f46990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6f46b18"/>
        <function-ref name="set" scoped="" ref="0x2acce6f46ca0"/>
        <function-ref name="clr" scoped="" ref="0x2acce6f46e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2acce6f55180" loc="47:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2acce6f55180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6f554d0"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6f55658"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6f557e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6f55968"/>
        <function-ref name="get" scoped="" ref="0x2acce6f55af0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6f55c78"/>
        <function-ref name="set" scoped="" ref="0x2acce6f55e00"/>
        <function-ref name="clr" scoped="" ref="0x2acce6f54020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2acce6f801b8" loc="27:/opt/tinyos-release-tinyos-2_1_2/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2acce6f801b8"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2acce6ce6b30"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2acce6ce6b30"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2acce6f80508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2acce6f807e8" loc="28:/opt/tinyos-release-tinyos-2_1_2/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2acce6f807e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2acce6f80b38"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2acce6f80cc0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2acce6f80e48"/>
        <function-ref name="actualMicro" scoped="" ref="0x2acce6f93020"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2acce6f931a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x2acce6fb0560" loc="60:/opt/tinyos-release-tinyos-2_1_2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2acce6fb0560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2acce6fb08b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2acce6e0be30" loc="57:/opt/tinyos-release-tinyos-2_1_2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2acce6e0be30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2acce6fb11a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x2acce6fb1e68" loc="59:/opt/tinyos-release-tinyos-2_1_2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2acce6fb1e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2acce6fb01e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x2acce6fb1490" loc="58:/opt/tinyos-release-tinyos-2_1_2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2acce6fb1490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2acce6fb17e0"/>
        <function-ref name="taskLoop" scoped="" ref="0x2acce6fb1968"/>
        <function-ref name="runNextTask" scoped="" ref="0x2acce6fb1af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2acce6cedb18" loc="48:/opt/tinyos-release-tinyos-2_1_2/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2acce6cedb18"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2acce6cede68"/>
        <function-ref name="runTask" scoped="" ref="0x2acce6ce5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2acce6cec0d0" loc="47:/opt/tinyos-release-tinyos-2_1_2/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2acce6cec0d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2acce6cec420"/>
        <function-ref name="taskLoop" scoped="" ref="0x2acce6cec5a8"/>
        <function-ref name="runNextTask" scoped="" ref="0x2acce6cec730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2acce6dbec58" loc="56:/opt/tinyos-release-tinyos-2_1_2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2acce6dbec58"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2acce6dbd020"/>
        <function-ref name="runTask" scoped="" ref="0x2acce6dbd1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x2acce6dc8168" loc="57:/opt/tinyos-release-tinyos-2_1_2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2acce6dc8168"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2acce6dc84b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2acce6dbfd88" loc="55:/opt/tinyos-release-tinyos-2_1_2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2acce6dbfd88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2acce6dbe170"/>
        <function-ref name="taskLoop" scoped="" ref="0x2acce6dbe2f8"/>
        <function-ref name="runNextTask" scoped="" ref="0x2acce6dbe480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x2acce6de27f0" loc="54:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2acce6de27f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2acce6de2b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x2acce6ce4dd8" loc="50:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2acce6ce4dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2acce6dd9170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x2acce6de3240" loc="51:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2acce6de3240"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2acce6de3590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0" ref="0x2acce6fc6578" loc="52:BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0" scoped="" ref="0x2acce6fc6578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2acce6d87cc0"/>
            <typename><typedef-ref name="TMilli" ref="0x2acce6d86088"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2acce6fc48f0"/>
        <function-ref name="fired" scoped="" ref="0x2acce6fc5020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2acce6fc5d10"/>
        <function-ref name="isOneShot" scoped="" ref="0x2acce6fc58c0"/>
        <function-ref name="getdt" scoped="" ref="0x2acce6fc31c0"/>
        <function-ref name="gett0" scoped="" ref="0x2acce6fc4d40"/>
        <function-ref name="isRunning" scoped="" ref="0x2acce6fc5470"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2acce6fbb0f8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2acce6fc4320"/>
        <function-ref name="startOneShot" scoped="" ref="0x2acce6fbb598"/>
        <function-ref name="stop" scoped="" ref="0x2acce6fbba38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x2acce6fcc5e8" loc="56:BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2acce6fcc5e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2acce6fcc938"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer1" ref="0x2acce6fc37d8" loc="53:BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer1" scoped="" ref="0x2acce6fc37d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2acce6d87cc0"/>
            <typename><typedef-ref name="TMilli" ref="0x2acce6d86088"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2acce6fbfa18"/>
        <function-ref name="fired" scoped="" ref="0x2acce6fc0158"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2acce6fc0e48"/>
        <function-ref name="isOneShot" scoped="" ref="0x2acce6fc09f8"/>
        <function-ref name="getdt" scoped="" ref="0x2acce6fbe2e8"/>
        <function-ref name="gett0" scoped="" ref="0x2acce6fbfe68"/>
        <function-ref name="isRunning" scoped="" ref="0x2acce6fc05a8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2acce6fc2370"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2acce6fbf448"/>
        <function-ref name="startOneShot" scoped="" ref="0x2acce6fc2810"/>
        <function-ref name="stop" scoped="" ref="0x2acce6fc2cb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2acce6fcd020" loc="55:BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2acce6fcd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2acce6fcd370"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2acce6fcd4f8"/>
        <function-ref name="led1On" scoped="" ref="0x2acce6fcd680"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2acce6fcd808"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2acce6fcd990"/>
        <function-ref name="get" scoped="" ref="0x2acce6fcdb18"/>
        <function-ref name="led1Off" scoped="" ref="0x2acce6fcdca0"/>
        <function-ref name="led2Off" scoped="" ref="0x2acce6fcc330"/>
        <function-ref name="set" scoped="" ref="0x2acce6fcde28"/>
        <function-ref name="led0On" scoped="" ref="0x2acce6fcc020"/>
        <function-ref name="led2On" scoped="" ref="0x2acce6fcc1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer2" ref="0x2acce6fbe900" loc="54:BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer2" scoped="" ref="0x2acce6fbe900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2acce6d87cc0"/>
            <typename><typedef-ref name="TMilli" ref="0x2acce6d86088"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2acce6fd0bc0"/>
        <function-ref name="fired" scoped="" ref="0x2acce6fd1278"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2acce6fd0020"/>
        <function-ref name="isOneShot" scoped="" ref="0x2acce6fd1b18"/>
        <function-ref name="getdt" scoped="" ref="0x2acce6fcf4d8"/>
        <function-ref name="gett0" scoped="" ref="0x2acce6fcf088"/>
        <function-ref name="isRunning" scoped="" ref="0x2acce6fd16c8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2acce6fd3490"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2acce6fd05f0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2acce6fd3930"/>
        <function-ref name="stop" scoped="" ref="0x2acce6fd3dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2acce6fbdd28" loc="46:/opt/tinyos-release-tinyos-2_1_2/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2acce6fbdd28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2acce6fe50a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2acce6fe5228"/>
        <function-ref name="led1On" scoped="" ref="0x2acce6fe53b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2acce6fe5538"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2acce6fe56c0"/>
        <function-ref name="get" scoped="" ref="0x2acce6fe5848"/>
        <function-ref name="led1Off" scoped="" ref="0x2acce6fe59d0"/>
        <function-ref name="led2Off" scoped="" ref="0x2acce6fe4020"/>
        <function-ref name="set" scoped="" ref="0x2acce6fe5b58"/>
        <function-ref name="led0On" scoped="" ref="0x2acce6fe5ce0"/>
        <function-ref name="led2On" scoped="" ref="0x2acce6fe5e68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x2acce6fe0ce8" loc="50:/opt/tinyos-release-tinyos-2_1_2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x2acce6fe0ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6fdf0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6fdf228"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6fdf3b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6fdf538"/>
        <function-ref name="get" scoped="" ref="0x2acce6fdf6c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6fdf848"/>
        <function-ref name="set" scoped="" ref="0x2acce6fdf9d0"/>
        <function-ref name="clr" scoped="" ref="0x2acce6fdfb58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2acce6fe1020" loc="46:/opt/tinyos-release-tinyos-2_1_2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2acce6fe1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2acce6fe1370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x2acce6fdfe70" loc="51:/opt/tinyos-release-tinyos-2_1_2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x2acce6fdfe70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6ff41e8"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6ff4370"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6ff44f8"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6ff4680"/>
        <function-ref name="get" scoped="" ref="0x2acce6ff4808"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6ff4990"/>
        <function-ref name="set" scoped="" ref="0x2acce6ff4b18"/>
        <function-ref name="clr" scoped="" ref="0x2acce6ff4ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2acce6fe15e8" loc="47:/opt/tinyos-release-tinyos-2_1_2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2acce6fe15e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2acce6fe1938"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2acce6fe1ac0"/>
        <function-ref name="led1On" scoped="" ref="0x2acce6fe1c48"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2acce6fe1dd0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2acce6fe0020"/>
        <function-ref name="get" scoped="" ref="0x2acce6fe01a8"/>
        <function-ref name="led1Off" scoped="" ref="0x2acce6fe0330"/>
        <function-ref name="led2Off" scoped="" ref="0x2acce6fe0950"/>
        <function-ref name="set" scoped="" ref="0x2acce6fe04b8"/>
        <function-ref name="led0On" scoped="" ref="0x2acce6fe0640"/>
        <function-ref name="led2On" scoped="" ref="0x2acce6fe07c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x2acce6ff3020" loc="52:/opt/tinyos-release-tinyos-2_1_2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x2acce6ff3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce6ff3370"/>
        <function-ref name="isInput" scoped="" ref="0x2acce6ff34f8"/>
        <function-ref name="toggle" scoped="" ref="0x2acce6ff3680"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce6ff3808"/>
        <function-ref name="get" scoped="" ref="0x2acce6ff3990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce6ff3b18"/>
        <function-ref name="set" scoped="" ref="0x2acce6ff3ca0"/>
        <function-ref name="clr" scoped="" ref="0x2acce6ff3e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x2acce6fe2e20" loc="44:/opt/tinyos-release-tinyos-2_1_2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x2acce6fe2e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce70041a8"/>
        <function-ref name="isInput" scoped="" ref="0x2acce7004330"/>
        <function-ref name="toggle" scoped="" ref="0x2acce70044b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce7004640"/>
        <function-ref name="get" scoped="" ref="0x2acce70047c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce7004950"/>
        <function-ref name="set" scoped="" ref="0x2acce7004ad8"/>
        <function-ref name="clr" scoped="" ref="0x2acce7004c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x2acce7003020" loc="45:/opt/tinyos-release-tinyos-2_1_2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x2acce7003020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce7003370"/>
        <function-ref name="isInput" scoped="" ref="0x2acce70034f8"/>
        <function-ref name="toggle" scoped="" ref="0x2acce7003680"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce7003808"/>
        <function-ref name="get" scoped="" ref="0x2acce7003990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce7003b18"/>
        <function-ref name="set" scoped="" ref="0x2acce7003ca0"/>
        <function-ref name="clr" scoped="" ref="0x2acce7003e28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x2acce70012d8" loc="47:/opt/tinyos-release-tinyos-2_1_2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2acce70012d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2acce7001628"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x2acce70021b0" loc="46:/opt/tinyos-release-tinyos-2_1_2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x2acce70021b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2acce7002500"/>
        <function-ref name="isInput" scoped="" ref="0x2acce7002688"/>
        <function-ref name="toggle" scoped="" ref="0x2acce7002810"/>
        <function-ref name="isOutput" scoped="" ref="0x2acce7002998"/>
        <function-ref name="get" scoped="" ref="0x2acce7002b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x2acce7002ca8"/>
        <function-ref name="set" scoped="" ref="0x2acce7002e30"/>
        <function-ref name="clr" scoped="" ref="0x2acce7001020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2acce7010a60" loc="45:/opt/tinyos-release-tinyos-2_1_2/tos/system/TimerMilliC.nc">
      <component-ref qname="BlinkAppC.Timer0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2acce7010a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2acce6d87cc0"/>
            <typename><typedef-ref name="TMilli" ref="0x2acce6d86088"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2acce71c6d60"/>
        <function-ref name="fired" scoped="" ref="0x2acce71c7470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2acce71c61c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2acce71c7d10"/>
        <function-ref name="getdt" scoped="" ref="0x2acce71c5648"/>
        <function-ref name="gett0" scoped="" ref="0x2acce71c51f8"/>
        <function-ref name="isRunning" scoped="" ref="0x2acce71c78c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2acce71c8620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2acce71c6790"/>
        <function-ref name="startOneShot" scoped="" ref="0x2acce71c8ac0"/>
        <function-ref name="stop" scoped="" ref="0x2acce71c7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2acce701d6a0" loc="49:/opt/tinyos-release-tinyos-2_1_2/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x2acce701d6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2acce6d87cc0"/>
            <typename><typedef-ref name="TMilli" ref="0x2acce6d86088"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2acce701aa18"/>
        <function-ref name="fired" scoped="" ref="0x2acce701b158"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2acce701be48"/>
        <function-ref name="isOneShot" scoped="" ref="0x2acce701b9f8"/>
        <function-ref name="getdt" scoped="" ref="0x2acce70182e8"/>
        <function-ref name="gett0" scoped="" ref="0x2acce701ae68"/>
        <function-ref name="isRunning" scoped="" ref="0x2acce701b5a8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2acce701c370"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2acce701a448"/>
        <function-ref name="startOneShot" scoped="" ref="0x2acce701c810"/>
        <function-ref name="stop" scoped="" ref="0x2acce701ccb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2acce702bde8" loc="46:/opt/tinyos-release-tinyos-2_1_2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x2acce702bde8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2acce6d87cc0"/>
            <typename><typedef-ref name="TMilli" ref="0x2acce6d86088"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2acce70260c0"/>
        <function-ref name="fired" scoped="" ref="0x2acce7028798"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2acce70274d8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2acce7027088"/>
        <function-ref name="getdt" scoped="" ref="0x2acce7026960"/>
        <function-ref name="gett0" scoped="" ref="0x2acce7026510"/>
        <function-ref name="isRunning" scoped="" ref="0x2acce7028be8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2acce70299e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2acce7027aa8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2acce7029e80"/>
        <function-ref name="stop" scoped="" ref="0x2acce7028348"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2acce7021338" loc="47:/opt/tinyos-release-tinyos-2_1_2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2acce7021338"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2acce6d87cc0"/>
            <typename><typedef-ref name="TMilli" ref="0x2acce6d86088"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2acce7023020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2acce702b0f0" loc="45:/opt/tinyos-release-tinyos-2_1_2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2acce702b0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2acce702b440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x2acce703de40" loc="29:/opt/tinyos-release-tinyos-2_1_2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x2acce703de40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2acce6d87cc0"/>
            <typename><typedef-ref name="TMilli" ref="0x2acce6d86088"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2acce67036a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2acce7040be8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2acce703c548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2acce703c0c0"/>
        <function-ref name="overflow" scoped="" ref="0x2acce703c9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2acce7037b98" loc="27:/opt/tinyos-release-tinyos-2_1_2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2acce7037b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2acce7034020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x2acce702c748" loc="28:/opt/tinyos-release-tinyos-2_1_2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x2acce702c748"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2acce6d87cc0"/>
            <typename><typedef-ref name="TMilli" ref="0x2acce6d86088"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2acce67036a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2acce7042020"/>
        <function-ref name="fired" scoped="" ref="0x2acce7032020"/>
        <function-ref name="startAt" scoped="" ref="0x2acce7032930"/>
        <function-ref name="isRunning" scoped="" ref="0x2acce70324a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x2acce70424a8"/>
        <function-ref name="start" scoped="" ref="0x2acce7033578"/>
        <function-ref name="stop" scoped="" ref="0x2acce7033a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2acce7128998" loc="26:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2acce7128998"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2acce6d87cc0"/>
            <typename><typedef-ref name="TMilli" ref="0x2acce6d86088"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2acce67036a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2acce7140020"/>
        <function-ref name="fired" scoped="" ref="0x2acce71260c0"/>
        <function-ref name="startAt" scoped="" ref="0x2acce71269d0"/>
        <function-ref name="isRunning" scoped="" ref="0x2acce7126548"/>
        <function-ref name="getAlarm" scoped="" ref="0x2acce71404a8"/>
        <function-ref name="start" scoped="" ref="0x2acce7127730"/>
        <function-ref name="stop" scoped="" ref="0x2acce7127c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2acce71281f0" loc="25:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2acce71281f0"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x2acce6ce67c8"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x2acce6ce67c8"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2acce7128540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2acce7140a90" loc="27:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2acce7140a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2acce6d87cc0"/>
            <typename><typedef-ref name="TMilli" ref="0x2acce6d86088"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2acce67036a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2acce713f828"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2acce713e190"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2acce713fcb0"/>
        <function-ref name="overflow" scoped="" ref="0x2acce713e618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x2acce74eb708" loc="31:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2acce74eb708"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2acce74eba58"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2acce74ebbe0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2acce74ebd68"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2acce74ea020"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2acce74ea1a8"/>
        <function-ref name="setControl" scoped="" ref="0x2acce74ea330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2acce74f7478" loc="26:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2acce74f7478"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2acce6d87cc0"/>
            <typename><typedef-ref name="TMilli" ref="0x2acce6d86088"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2acce67036a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2acce74f4b18"/>
        <function-ref name="fired" scoped="" ref="0x2acce74f6b80"/>
        <function-ref name="startAt" scoped="" ref="0x2acce74f4510"/>
        <function-ref name="isRunning" scoped="" ref="0x2acce74f4088"/>
        <function-ref name="getAlarm" scoped="" ref="0x2acce74f3020"/>
        <function-ref name="start" scoped="" ref="0x2acce74f6220"/>
        <function-ref name="stop" scoped="" ref="0x2acce74f66f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2acce74f8c70" loc="25:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2acce74f8c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2acce74f7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2acce74f3608" loc="27:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2acce74f3608"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2acce6d87cc0"/>
            <typename><typedef-ref name="TMilli" ref="0x2acce6d86088"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2acce67036a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2acce74f23a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2acce74f2cb8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2acce74f2830"/>
        <function-ref name="overflow" scoped="" ref="0x2acce74f1190"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x2acce751a8c0" loc="33:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x2acce751a8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x2acce751ac10"/>
        <function-ref name="compareBusy" scoped="" ref="0x2acce751ad98"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x2acce7518020"/>
        <function-ref name="countBusy" scoped="" ref="0x2acce75181a8"/>
        <function-ref name="getAssr" scoped="" ref="0x2acce7518330"/>
        <function-ref name="setAssr" scoped="" ref="0x2acce75184b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x2acce74ea6c0" loc="32:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2acce74ea6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2acce751a020"/>
        <function-ref name="fired" scoped="" ref="0x2acce751cd08"/>
        <function-ref name="get" scoped="" ref="0x2acce751c3a8"/>
        <function-ref name="reset" scoped="" ref="0x2acce751b1f8"/>
        <function-ref name="isOn" scoped="" ref="0x2acce751a4a8"/>
        <function-ref name="set" scoped="" ref="0x2acce751c830"/>
        <function-ref name="start" scoped="" ref="0x2acce751b680"/>
        <function-ref name="stop" scoped="" ref="0x2acce751bb08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2acce74f1710" loc="30:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2acce74f1710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2acce74ed930"/>
        <function-ref name="test" scoped="" ref="0x2acce74ed020"/>
        <function-ref name="get" scoped="" ref="0x2acce74ef3a8"/>
        <function-ref name="setScale" scoped="" ref="0x2acce74eddb8"/>
        <function-ref name="getScale" scoped="" ref="0x2acce74eb2f0"/>
        <function-ref name="reset" scoped="" ref="0x2acce74ee1f8"/>
        <function-ref name="overflow" scoped="" ref="0x2acce74efd08"/>
        <function-ref name="isOn" scoped="" ref="0x2acce74ed4a8"/>
        <function-ref name="set" scoped="" ref="0x2acce74ef830"/>
        <function-ref name="start" scoped="" ref="0x2acce74ee680"/>
        <function-ref name="stop" scoped="" ref="0x2acce74eeb08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2acce70c6020" loc="48:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2acce70c6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2acce70c6370"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2acce70c64f8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2acce70c6680"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2acce70c6808"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2acce70c6990"/>
        <function-ref name="setControl" scoped="" ref="0x2acce70c6b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x2acce70c1228" loc="50:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x2acce70c1228"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x2acce70c1578"/>
        <function-ref name="compareBusy" scoped="" ref="0x2acce70c1700"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x2acce70c1888"/>
        <function-ref name="countBusy" scoped="" ref="0x2acce70c1a10"/>
        <function-ref name="getAssr" scoped="" ref="0x2acce70c1b98"/>
        <function-ref name="setAssr" scoped="" ref="0x2acce70c1d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2acce70c5020" loc="49:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2acce70c5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2acce70c37a8"/>
        <function-ref name="fired" scoped="" ref="0x2acce70c4560"/>
        <function-ref name="get" scoped="" ref="0x2acce70c5ba0"/>
        <function-ref name="reset" scoped="" ref="0x2acce70c49e8"/>
        <function-ref name="isOn" scoped="" ref="0x2acce70c3c30"/>
        <function-ref name="set" scoped="" ref="0x2acce70c4088"/>
        <function-ref name="start" scoped="" ref="0x2acce70c4e70"/>
        <function-ref name="stop" scoped="" ref="0x2acce70c3320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2acce70b4df8" loc="47:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2acce70b4df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2acce70c80f8"/>
        <function-ref name="test" scoped="" ref="0x2acce70c9798"/>
        <function-ref name="get" scoped="" ref="0x2acce70b1a18"/>
        <function-ref name="setScale" scoped="" ref="0x2acce70c8580"/>
        <function-ref name="getScale" scoped="" ref="0x2acce70c8a58"/>
        <function-ref name="reset" scoped="" ref="0x2acce70ca980"/>
        <function-ref name="overflow" scoped="" ref="0x2acce70ca4f8"/>
        <function-ref name="isOn" scoped="" ref="0x2acce70c9c20"/>
        <function-ref name="set" scoped="" ref="0x2acce70ca020"/>
        <function-ref name="start" scoped="" ref="0x2acce70cae08"/>
        <function-ref name="stop" scoped="" ref="0x2acce70c9310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2acce70d2160" loc="50:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2acce70d2160"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2acce70d24b0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2acce70d2638"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2acce70d27c0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2acce70d2948"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2acce70d2ad0"/>
        <function-ref name="setControl" scoped="" ref="0x2acce70d2c58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x2acce70cd268" loc="52:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2acce70cd268"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2acce70cd5b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x2acce70cd968" loc="53:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x2acce70cd968"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x2acce70cdcb8"/>
        <function-ref name="compareBusy" scoped="" ref="0x2acce70cde40"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x2acce70cc020"/>
        <function-ref name="countBusy" scoped="" ref="0x2acce70cc1a8"/>
        <function-ref name="getAssr" scoped="" ref="0x2acce70cc330"/>
        <function-ref name="setAssr" scoped="" ref="0x2acce70cc4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2acce70d1190" loc="51:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2acce70d1190"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2acce70ce930"/>
        <function-ref name="fired" scoped="" ref="0x2acce70d06d0"/>
        <function-ref name="get" scoped="" ref="0x2acce70d1d10"/>
        <function-ref name="reset" scoped="" ref="0x2acce70d0b58"/>
        <function-ref name="isOn" scoped="" ref="0x2acce70cedb8"/>
        <function-ref name="set" scoped="" ref="0x2acce70d01f8"/>
        <function-ref name="start" scoped="" ref="0x2acce70ce020"/>
        <function-ref name="stop" scoped="" ref="0x2acce70ce4a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2acce70d70f8" loc="49:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2acce70d70f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2acce70d3270"/>
        <function-ref name="test" scoped="" ref="0x2acce70d5930"/>
        <function-ref name="get" scoped="" ref="0x2acce70d7c78"/>
        <function-ref name="setScale" scoped="" ref="0x2acce70d36f8"/>
        <function-ref name="getScale" scoped="" ref="0x2acce70d3bd0"/>
        <function-ref name="reset" scoped="" ref="0x2acce70d6a90"/>
        <function-ref name="overflow" scoped="" ref="0x2acce70d6608"/>
        <function-ref name="isOn" scoped="" ref="0x2acce70d5db8"/>
        <function-ref name="set" scoped="" ref="0x2acce70d6130"/>
        <function-ref name="start" scoped="" ref="0x2acce70d5020"/>
        <function-ref name="stop" scoped="" ref="0x2acce70d54a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x2acce7162cf0" loc="74:/opt/tinyos-release-tinyos-2_1_2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x2acce7162cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2acce71610a0"/>
        <function-ref name="runTask" scoped="" ref="0x2acce7161228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2acce7166c70" loc="49:/opt/tinyos-release-tinyos-2_1_2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2acce7166c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2acce6d87cc0"/>
            <typename><typedef-ref name="TMilli" ref="0x2acce6d86088"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2acce67036a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2acce7162410"/>
        <function-ref name="fired" scoped="" ref="0x2acce71644a8"/>
        <function-ref name="startAt" scoped="" ref="0x2acce7164db8"/>
        <function-ref name="isRunning" scoped="" ref="0x2acce7164930"/>
        <function-ref name="getAlarm" scoped="" ref="0x2acce7162898"/>
        <function-ref name="start" scoped="" ref="0x2acce71659f0"/>
        <function-ref name="stop" scoped="" ref="0x2acce7164020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2acce716bab0" loc="48:/opt/tinyos-release-tinyos-2_1_2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2acce716bab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2acce6d87cc0"/>
            <typename><typedef-ref name="TMilli" ref="0x2acce6d86088"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2acce7167d60"/>
        <function-ref name="fired" scoped="" ref="0x2acce7169470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2acce71671c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2acce7169d10"/>
        <function-ref name="getdt" scoped="" ref="0x2acce7166648"/>
        <function-ref name="gett0" scoped="" ref="0x2acce71661f8"/>
        <function-ref name="isRunning" scoped="" ref="0x2acce71698c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2acce716a620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2acce7167790"/>
        <function-ref name="startOneShot" scoped="" ref="0x2acce716aac0"/>
        <function-ref name="stop" scoped="" ref="0x2acce7169020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x2acce71bf930" loc="71:/opt/tinyos-release-tinyos-2_1_2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x2acce71bf930"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2acce71bfc80"/>
        <function-ref name="runTask" scoped="" ref="0x2acce71bfe08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x2acce71a6858" loc="49:/opt/tinyos-release-tinyos-2_1_2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x2acce71a6858"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2acce6d87cc0"/>
            <typename><typedef-ref name="TMilli" ref="0x2acce6d86088"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2acce71c0bc0"/>
        <function-ref name="fired" scoped="" ref="0x2acce71c11c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2acce71c0020"/>
        <function-ref name="isOneShot" scoped="" ref="0x2acce71c1a60"/>
        <function-ref name="getdt" scoped="" ref="0x2acce71bf4d8"/>
        <function-ref name="gett0" scoped="" ref="0x2acce71bf088"/>
        <function-ref name="isRunning" scoped="" ref="0x2acce71c1610"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2acce71a53d8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2acce71c05f0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2acce71a5878"/>
        <function-ref name="stop" scoped="" ref="0x2acce71a5d18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2acce71ac5e0" loc="48:/opt/tinyos-release-tinyos-2_1_2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2acce71ac5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2acce6d87cc0"/>
            <typename><typedef-ref name="TMilli" ref="0x2acce6d86088"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2acce71a8988"/>
        <function-ref name="fired" scoped="" ref="0x2acce71a9020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2acce71a9d70"/>
        <function-ref name="isOneShot" scoped="" ref="0x2acce71a9900"/>
        <function-ref name="getdt" scoped="" ref="0x2acce71a62d8"/>
        <function-ref name="gett0" scoped="" ref="0x2acce71a8df8"/>
        <function-ref name="isRunning" scoped="" ref="0x2acce71a9490"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2acce71ab198"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2acce71a8398"/>
        <function-ref name="startOneShot" scoped="" ref="0x2acce71ab658"/>
        <function-ref name="stop" scoped="" ref="0x2acce71abb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2acce71bb128" loc="48:/opt/tinyos-release-tinyos-2_1_2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2acce71bb128"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2acce6d87cc0"/>
            <typename><typedef-ref name="TMilli" ref="0x2acce6d86088"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2acce71bbca8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2acce71d0330" loc="49:/opt/tinyos-release-tinyos-2_1_2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2acce71d0330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2acce6d87cc0"/>
            <typename><typedef-ref name="TMilli" ref="0x2acce6d86088"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2acce67036a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2acce71ce0c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2acce71ce9d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2acce71ce548"/>
        <function-ref name="overflow" scoped="" ref="0x2acce71cee58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2acce71c2020" loc="45:/opt/tinyos-release-tinyos-2_1_2/tos/system/TimerMilliC.nc">
      <component-ref qname="BlinkAppC.Timer1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2acce71c2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2acce6d87cc0"/>
            <typename><typedef-ref name="TMilli" ref="0x2acce6d86088"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2acce71dd2b8"/>
        <function-ref name="fired" scoped="" ref="0x2acce71df978"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2acce71de6c8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2acce71de278"/>
        <function-ref name="getdt" scoped="" ref="0x2acce71ddb58"/>
        <function-ref name="gett0" scoped="" ref="0x2acce71dd708"/>
        <function-ref name="isRunning" scoped="" ref="0x2acce71dfdc8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2acce71c2b68"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2acce71dec98"/>
        <function-ref name="startOneShot" scoped="" ref="0x2acce71df088"/>
        <function-ref name="stop" scoped="" ref="0x2acce71df528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2acce71da550" loc="45:/opt/tinyos-release-tinyos-2_1_2/tos/system/TimerMilliC.nc">
      <component-ref qname="BlinkAppC.Timer2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2acce71da550"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2acce6d87cc0"/>
            <typename><typedef-ref name="TMilli" ref="0x2acce6d86088"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2acce71d7768"/>
        <function-ref name="fired" scoped="" ref="0x2acce71d9e50"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2acce71d8b78"/>
        <function-ref name="isOneShot" scoped="" ref="0x2acce71d8728"/>
        <function-ref name="getdt" scoped="" ref="0x2acce71d5088"/>
        <function-ref name="gett0" scoped="" ref="0x2acce71d7bb8"/>
        <function-ref name="isRunning" scoped="" ref="0x2acce71d82d8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2acce71d90c0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2acce71d7198"/>
        <function-ref name="startOneShot" scoped="" ref="0x2acce71d9560"/>
        <function-ref name="stop" scoped="" ref="0x2acce71d9a00"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/opt/tinyos-release-tinyos-2_1_2/tos/interfaces/Init.nc">
      <documentation loc="34:/opt/tinyos-release-tinyos-2_1_2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2acce6dfc588" loc="62:/opt/tinyos-release-tinyos-2_1_2/tos/interfaces/Init.nc">
        <documentation loc="53:/opt/tinyos-release-tinyos-2_1_2/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2acce6cf15d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/opt/tinyos-release-tinyos-2_1_2/tos/interfaces/Boot.nc">
      <documentation loc="42:/opt/tinyos-release-tinyos-2_1_2/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x2acce6dfd258" loc="60:/opt/tinyos-release-tinyos-2_1_2/tos/interfaces/Boot.nc">
        <documentation loc="51:/opt/tinyos-release-tinyos-2_1_2/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x2acce6e125e8" loc="60:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2acce667ebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2acce67036a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x2acce6e12378" loc="60:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2acce67036a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x2acce6e0ac98" loc="31:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2acce667ebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x2acce6e076e8" loc="39:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2acce67036a0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2acce67036a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2acce6e07478" loc="39:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2acce67036a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x2acce6e06290" loc="46:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2acce67036a0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2acce67036a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2acce6e06020" loc="46:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2acce67036a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x2acce6e06ad8" loc="53:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/opt/tinyos-release-tinyos-2_1_2/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/opt/tinyos-release-tinyos-2_1_2/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x2acce6e1eae8" loc="44:/opt/tinyos-release-tinyos-2_1_2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x2acce6e1c1d8" loc="45:/opt/tinyos-release-tinyos-2_1_2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2acce6cdecc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x2acce6e1fd70" loc="42:/opt/tinyos-release-tinyos-2_1_2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x2acce6e1b020" loc="47:/opt/tinyos-release-tinyos-2_1_2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2acce6cdecc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2acce6e1e438" loc="43:/opt/tinyos-release-tinyos-2_1_2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2acce6cdecc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x2acce6e1c890" loc="46:/opt/tinyos-release-tinyos-2_1_2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2acce6e1f070" loc="40:/opt/tinyos-release-tinyos-2_1_2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x2acce6e1f6e0" loc="41:/opt/tinyos-release-tinyos-2_1_2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/opt/tinyos-release-tinyos-2_1_2/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/opt/tinyos-release-tinyos-2_1_2/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2acce6671df8" loc="57:/opt/tinyos-release-tinyos-2_1_2/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/opt/tinyos-release-tinyos-2_1_2/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x2acce6ce3d10" loc="72:/opt/tinyos-release-tinyos-2_1_2/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/opt/tinyos-release-tinyos-2_1_2/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x2acce6ce3570" loc="65:/opt/tinyos-release-tinyos-2_1_2/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/opt/tinyos-release-tinyos-2_1_2/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2acce6cdecc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/opt/tinyos-release-tinyos-2_1_2/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x2acce6cefa38" loc="67:/opt/tinyos-release-tinyos-2_1_2/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/opt/tinyos-release-tinyos-2_1_2/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2acce6cf15d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x2acce6ced258" loc="75:/opt/tinyos-release-tinyos-2_1_2/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/opt/tinyos-release-tinyos-2_1_2/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/opt/tinyos-release-tinyos-2_1_2/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/opt/tinyos-release-tinyos-2_1_2/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x2acce6dbde38" loc="76:/opt/tinyos-release-tinyos-2_1_2/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/opt/tinyos-release-tinyos-2_1_2/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/opt/tinyos-release-tinyos-2_1_2/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/opt/tinyos-release-tinyos-2_1_2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x2acce6de2360" loc="62:/opt/tinyos-release-tinyos-2_1_2/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/opt/tinyos-release-tinyos-2_1_2/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x2acce6d66320"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/opt/tinyos-release-tinyos-2_1_2/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/opt/tinyos-release-tinyos-2_1_2/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x2acce6dd9e70" loc="52:/opt/tinyos-release-tinyos-2_1_2/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/opt/tinyos-release-tinyos-2_1_2/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/opt/tinyos-release-tinyos-2_1_2/tos/lib/timer/Timer.nc">
      <documentation loc="36:/opt/tinyos-release-tinyos-2_1_2/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2acce6fb83b0" loc="53:/opt/tinyos-release-tinyos-2_1_2/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2acce6fb83b0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2acce6fc7020" loc="136:/opt/tinyos-release-tinyos-2_1_2/tos/lib/timer/Timer.nc">
        <documentation loc="132:/opt/tinyos-release-tinyos-2_1_2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2acce67036a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2acce6fb6760" loc="83:/opt/tinyos-release-tinyos-2_1_2/tos/lib/timer/Timer.nc">
        <documentation loc="80:/opt/tinyos-release-tinyos-2_1_2/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x2acce6fb45b8" loc="114:/opt/tinyos-release-tinyos-2_1_2/tos/lib/timer/Timer.nc">
        <documentation loc="100:/opt/tinyos-release-tinyos-2_1_2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2acce67036a0"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2acce67036a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2acce6fb4020" loc="114:/opt/tinyos-release-tinyos-2_1_2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2acce67036a0"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2acce6fb4338" loc="114:/opt/tinyos-release-tinyos-2_1_2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2acce67036a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x2acce6fb57b8" loc="98:/opt/tinyos-release-tinyos-2_1_2/tos/lib/timer/Timer.nc">
        <documentation loc="94:/opt/tinyos-release-tinyos-2_1_2/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2acce6cdecc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x2acce6fc6020" loc="151:/opt/tinyos-release-tinyos-2_1_2/tos/lib/timer/Timer.nc">
        <documentation loc="146:/opt/tinyos-release-tinyos-2_1_2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2acce67036a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x2acce6fc7740" loc="144:/opt/tinyos-release-tinyos-2_1_2/tos/lib/timer/Timer.nc">
        <documentation loc="138:/opt/tinyos-release-tinyos-2_1_2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2acce67036a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2acce6fb5020" loc="92:/opt/tinyos-release-tinyos-2_1_2/tos/lib/timer/Timer.nc">
        <documentation loc="86:/opt/tinyos-release-tinyos-2_1_2/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2acce6cdecc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x2acce6fb8e80" loc="64:/opt/tinyos-release-tinyos-2_1_2/tos/lib/timer/Timer.nc">
        <documentation loc="56:/opt/tinyos-release-tinyos-2_1_2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2acce67036a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2acce6fb8c10" loc="64:/opt/tinyos-release-tinyos-2_1_2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2acce67036a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x2acce6fc85b8" loc="129:/opt/tinyos-release-tinyos-2_1_2/tos/lib/timer/Timer.nc">
        <documentation loc="116:/opt/tinyos-release-tinyos-2_1_2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2acce67036a0"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2acce67036a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2acce6fc8020" loc="129:/opt/tinyos-release-tinyos-2_1_2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2acce67036a0"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2acce6fc8338" loc="129:/opt/tinyos-release-tinyos-2_1_2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2acce67036a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x2acce6fb78e8" loc="73:/opt/tinyos-release-tinyos-2_1_2/tos/lib/timer/Timer.nc">
        <documentation loc="66:/opt/tinyos-release-tinyos-2_1_2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2acce67036a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2acce6fb7678" loc="73:/opt/tinyos-release-tinyos-2_1_2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2acce67036a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2acce6fb60d8" loc="78:/opt/tinyos-release-tinyos-2_1_2/tos/lib/timer/Timer.nc">
        <documentation loc="75:/opt/tinyos-release-tinyos-2_1_2/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/opt/tinyos-release-tinyos-2_1_2/tos/interfaces/Leds.nc">
      <documentation loc="33:/opt/tinyos-release-tinyos-2_1_2/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x2acce6fde428" loc="61:/opt/tinyos-release-tinyos-2_1_2/tos/interfaces/Leds.nc">
        <documentation loc="58:/opt/tinyos-release-tinyos-2_1_2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x2acce6fdeb60" loc="67:/opt/tinyos-release-tinyos-2_1_2/tos/interfaces/Leds.nc">
        <documentation loc="63:/opt/tinyos-release-tinyos-2_1_2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x2acce6fdd328" loc="72:/opt/tinyos-release-tinyos-2_1_2/tos/interfaces/Leds.nc">
        <documentation loc="69:/opt/tinyos-release-tinyos-2_1_2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x2acce6fdc1d8" loc="83:/opt/tinyos-release-tinyos-2_1_2/tos/interfaces/Leds.nc">
        <documentation loc="79:/opt/tinyos-release-tinyos-2_1_2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x2acce6fdb810" loc="100:/opt/tinyos-release-tinyos-2_1_2/tos/interfaces/Leds.nc">
        <documentation loc="96:/opt/tinyos-release-tinyos-2_1_2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2acce6fd9020" loc="117:/opt/tinyos-release-tinyos-2_1_2/tos/interfaces/Leds.nc">
        <documentation loc="103:/opt/tinyos-release-tinyos-2_1_2/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x2acce6fdda40" loc="77:/opt/tinyos-release-tinyos-2_1_2/tos/interfaces/Leds.nc">
        <documentation loc="74:/opt/tinyos-release-tinyos-2_1_2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2acce6fd9b20" loc="134:/opt/tinyos-release-tinyos-2_1_2/tos/interfaces/Leds.nc">
        <documentation loc="120:/opt/tinyos-release-tinyos-2_1_2/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x2acce6fd98b0" loc="134:/opt/tinyos-release-tinyos-2_1_2/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x2acce6fc9cd8" loc="56:/opt/tinyos-release-tinyos-2_1_2/tos/interfaces/Leds.nc">
        <documentation loc="53:/opt/tinyos-release-tinyos-2_1_2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x2acce6fdc948" loc="89:/opt/tinyos-release-tinyos-2_1_2/tos/interfaces/Leds.nc">
        <documentation loc="86:/opt/tinyos-release-tinyos-2_1_2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x2acce6fdb0d8" loc="94:/opt/tinyos-release-tinyos-2_1_2/tos/interfaces/Leds.nc">
        <documentation loc="91:/opt/tinyos-release-tinyos-2_1_2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/opt/tinyos-release-tinyos-2_1_2/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/opt/tinyos-release-tinyos-2_1_2/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2acce7024568" loc="53:/opt/tinyos-release-tinyos-2_1_2/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2acce7024568"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2acce7024df8" loc="61:/opt/tinyos-release-tinyos-2_1_2/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/opt/tinyos-release-tinyos-2_1_2/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2acce67036a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/opt/tinyos-release-tinyos-2_1_2/tos/lib/timer/Counter.nc">
      <documentation loc="36:/opt/tinyos-release-tinyos-2_1_2/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2acce703f3f8" loc="57:/opt/tinyos-release-tinyos-2_1_2/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2acce703f3f8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2acce703f628" loc="57:/opt/tinyos-release-tinyos-2_1_2/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2acce703f628"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2acce703e020" loc="64:/opt/tinyos-release-tinyos-2_1_2/tos/lib/timer/Counter.nc">
        <documentation loc="59:/opt/tinyos-release-tinyos-2_1_2/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2acce703f628"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x2acce703d070" loc="76:/opt/tinyos-release-tinyos-2_1_2/tos/lib/timer/Counter.nc">
        <documentation loc="73:/opt/tinyos-release-tinyos-2_1_2/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x2acce703e838" loc="71:/opt/tinyos-release-tinyos-2_1_2/tos/lib/timer/Counter.nc">
        <documentation loc="66:/opt/tinyos-release-tinyos-2_1_2/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2acce6cdecc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2acce703d760" loc="82:/opt/tinyos-release-tinyos-2_1_2/tos/lib/timer/Counter.nc">
        <documentation loc="78:/opt/tinyos-release-tinyos-2_1_2/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/opt/tinyos-release-tinyos-2_1_2/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/opt/tinyos-release-tinyos-2_1_2/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2acce7034ac8" loc="56:/opt/tinyos-release-tinyos-2_1_2/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2acce7034ac8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2acce7034cf8" loc="56:/opt/tinyos-release-tinyos-2_1_2/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2acce7034cf8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2acce702d7a0" loc="109:/opt/tinyos-release-tinyos-2_1_2/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/opt/tinyos-release-tinyos-2_1_2/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2acce7034cf8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2acce7030770" loc="78:/opt/tinyos-release-tinyos-2_1_2/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/opt/tinyos-release-tinyos-2_1_2/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x2acce702fd70" loc="103:/opt/tinyos-release-tinyos-2_1_2/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/opt/tinyos-release-tinyos-2_1_2/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2acce7034cf8"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2acce7034cf8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2acce702f7d0" loc="103:/opt/tinyos-release-tinyos-2_1_2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2acce7034cf8"/></type-var>
          </variable>
          <variable name="dt" ref="0x2acce702faf0" loc="103:/opt/tinyos-release-tinyos-2_1_2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2acce7034cf8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2acce702f020" loc="88:/opt/tinyos-release-tinyos-2_1_2/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/opt/tinyos-release-tinyos-2_1_2/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2acce6cdecc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x2acce702c020" loc="116:/opt/tinyos-release-tinyos-2_1_2/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/opt/tinyos-release-tinyos-2_1_2/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2acce7034cf8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2acce7031810" loc="66:/opt/tinyos-release-tinyos-2_1_2/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/opt/tinyos-release-tinyos-2_1_2/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2acce7034cf8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2acce70315a0" loc="66:/opt/tinyos-release-tinyos-2_1_2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2acce7034cf8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2acce7030020" loc="73:/opt/tinyos-release-tinyos-2_1_2/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/opt/tinyos-release-tinyos-2_1_2/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="42:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="34:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControl" ref="0x2acce705fa58" loc="45:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="44:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2acce6d93020"/>
            <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2acce6d93428"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x2acce7073e18" loc="53:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="52:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2acce6da14b8"/>
            <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2acce6da18c0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x2acce705cc70" loc="49:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="48:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2acce6d99d48"/>
            <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2acce6d97178"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x2acce7073678" loc="50:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2acce6d99d48"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2acce6d97178"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x2acce7073408" loc="50:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2acce6d99d48"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2acce6d97178"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x2acce7072828" loc="54:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2acce6da14b8"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2acce6da18c0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x2acce70725b8" loc="54:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2acce6da14b8"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2acce6da18c0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x2acce705c4c8" loc="46:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2acce6d93020"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2acce6d93428"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2acce705c258" loc="46:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2acce6d93020"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2acce6d93428"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="15:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
      <documentation loc="11:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="controlBusy" ref="0x2acce707b998" loc="38:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="34:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; @return TRUE if TCCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareBusy" ref="0x2acce707a1d8" loc="44:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="40:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; @return TRUE if OCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer0Asynchronous" ref="0x2acce707b290" loc="32:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="29:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 0 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x2acce707a988" loc="50:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="46:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; @return TRUE if TCNT0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x2acce707c0d8" loc="21:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="17:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer0 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2acce6d9b5e0"/>
            <typename><typedef-ref name="Atm128Assr_t" ref="0x2acce6d9b9e8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x2acce707ca88" loc="27:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="23:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer0 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2acce6d9b5e0"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x2acce6d9b9e8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2acce707c818" loc="27:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2acce6d9b5e0"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x2acce6d9b9e8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="34:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x2acce706f068" loc="41:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2acce706f068"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x2acce706c738" loc="74:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="70:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2acce6cdecc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2acce706e9d0" loc="58:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="57:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2acce706f920" loc="48:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="44:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2acce706f068"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2acce706d110" loc="62:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2acce706a020" loc="80:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="76:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2acce6cdecc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2acce706e290" loc="54:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="50:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2acce706f068"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2acce706e020" loc="54:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2acce706f068"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2acce706d808" loc="65:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="64:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2acce706c020" loc="68:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="34:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x2acce7052418" loc="55:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2acce7052418"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x2acce7065900" loc="98:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x2acce7066a40" loc="87:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="83:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2acce6cdecc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2acce7052cb8" loc="61:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="57:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2acce7052418"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x2acce7064290" loc="104:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="100:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x2acce7064020" loc="104:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x2acce7064a10" loc="110:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="106:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2acce667e160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2acce70504c0" loc="75:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2acce7051d50" loc="70:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="69:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2acce70651d8" loc="93:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="89:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2acce6cdecc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2acce7051630" loc="67:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="63:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2acce7052418"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2acce70513c0" loc="67:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2acce7052418"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2acce7050bb8" loc="78:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="77:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2acce7066328" loc="81:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/opt/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
